<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="p2p-actions_8hpp" kind="file" language="C++">
    <compoundname>p2p-actions.hpp</compoundname>
    <includes refid="data_8hpp" local="yes">data.hpp</includes>
    <includedby refid="_t_i_n_8tab_8c" local="yes">C:/Users/Artur/Downloads/TIN-master/TIN.tab.c</includedby>
    <incdepgraph>
      <node id="104">
        <label>sys/stat.h</label>
      </node>
      <node id="122">
        <label>list</label>
      </node>
      <node id="115">
        <label>netinet/in.h</label>
      </node>
      <node id="118">
        <label>arpa/inet.h</label>
      </node>
      <node id="112">
        <label>structs.h</label>
        <link refid="structs_8h"/>
        <childnode refid="113" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>resource.h</label>
        <link refid="resource_8h"/>
        <childnode refid="111" relation="include">
        </childnode>
      </node>
      <node id="129">
        <label>filedownload.hpp</label>
        <link refid="filedownload_8hpp"/>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="108">
        <label>string</label>
      </node>
      <node id="105">
        <label>fstream</label>
      </node>
      <node id="116">
        <label>netdb.h</label>
      </node>
      <node id="120">
        <label>pthread.h</label>
      </node>
      <node id="109">
        <label>sys/types.h</label>
      </node>
      <node id="106">
        <label>ctime</label>
      </node>
      <node id="119">
        <label>unistd.h</label>
      </node>
      <node id="126">
        <label>vector</label>
      </node>
      <node id="125">
        <label>sstream</label>
      </node>
      <node id="103">
        <label>data.hpp</label>
        <link refid="data_8hpp"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
        <childnode refid="128" relation="include">
        </childnode>
        <childnode refid="129" relation="include">
        </childnode>
      </node>
      <node id="128">
        <label>netmsg.hpp</label>
        <link refid="netmsg_8hpp"/>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="121">
        <label>iostream</label>
      </node>
      <node id="127">
        <label>deque</label>
      </node>
      <node id="113">
        <label>params.h</label>
        <link refid="params_8h"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="114" relation="include">
        </childnode>
        <childnode refid="115" relation="include">
        </childnode>
        <childnode refid="116" relation="include">
        </childnode>
        <childnode refid="117" relation="include">
        </childnode>
        <childnode refid="118" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
        <childnode refid="126" relation="include">
        </childnode>
        <childnode refid="127" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>mutex</label>
      </node>
      <node id="114">
        <label>sys/socket.h</label>
      </node>
      <node id="123">
        <label>set</label>
      </node>
      <node id="102">
        <label>C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp</label>
        <link refid="p2p-actions_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
      <node id="117">
        <label>stdio.h</label>
      </node>
      <node id="111">
        <label>host.hpp</label>
        <link refid="host_8hpp"/>
        <childnode refid="112" relation="include">
        </childnode>
      </node>
      <node id="124">
        <label>dirent.h</label>
      </node>
    </incdepgraph>
    <innerclass refid="struct_command_data" prot="public">CommandData</innerclass>
    <innernamespace refid="namespacestd">std</innernamespace>
      <sectiondef kind="var">
      <memberdef kind="variable" id="p2p-actions_8hpp_1ad947d52b8870c3081e69adc0cdf5a518" prot="public" static="no" mutable="no">
        <type>struct <ref refid="struct_command_data" kindref="compound">CommandData</ref></type>
        <definition>struct CommandData cmdata</definition>
        <argsstring></argsstring>
        <name>cmdata</name>
        <briefdescription>
<para>Zmienna globalna do której interpreter zapisuje zawartość ostatnio wpisanej komendy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="61" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1a762a9fd65391371e2d3211e74db61e9b" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t termtx</definition>
        <argsstring></argsstring>
        <name>termtx</name>
        <briefdescription>
<para>Mutex chroniący dostęp do stdout. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="66" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="66" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1a684bce3cb0f8da566840509d50481068" prot="public" static="no" mutable="no">
        <type>pthread_mutex_t</type>
        <definition>pthread_mutex_t cmtx</definition>
        <argsstring></argsstring>
        <name>cmtx</name>
        <briefdescription>
<para>Mutex chroniący dostęp do cmdata. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="68" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="68" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1a97554b6c78c83007858cbb8e88a78b61" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* welcome</definition>
        <argsstring></argsstring>
        <name>welcome</name>
        <initializer>= 
	&quot;Welcome in Pompous AAP File Transfer Protocol v1.0!\nRemember: your computer is your friend.\n\n&quot;</initializer>
        <briefdescription>
<para>Komunikat powitalny. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="71" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="71" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1a5c0a0d2a5f917da7806df3849670f95c" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* prompt</definition>
        <argsstring></argsstring>
        <name>prompt</name>
        <initializer>= &quot;&gt;&gt; &quot;</initializer>
        <briefdescription>
<para>Znak zachęty. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="74" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="74" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1accf4a9f1a7a43f110d590e364d8c40f5" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* errMsg</definition>
        <argsstring></argsstring>
        <name>errMsg</name>
        <initializer>= &quot;command error&quot;</initializer>
        <briefdescription>
<para>Komunikat o błedzie parsowania komendy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="76" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="76" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1a1fe55dfbf09256d5ecccba3673a29a5c" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* threadFailed</definition>
        <argsstring></argsstring>
        <name>threadFailed</name>
        <initializer>= &quot;Creating command thread failed!\n&gt;&gt; &quot;</initializer>
        <briefdescription>
<para>Komunikat o błędzie podczas tworzenia wątku obsługi komendy. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="78" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* receiverFailed</definition>
        <argsstring></argsstring>
        <name>receiverFailed</name>
        <initializer>= &quot;Creating receiver thread failed!\n&gt;&gt; &quot;</initializer>
        <briefdescription>
<para>Komunikat o błędzie tworzenia wątku odbiorczego UDP. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="80" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1a734452668d00adefa24acabc599d88bd" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* tcpThreadFailed</definition>
        <argsstring></argsstring>
        <name>tcpThreadFailed</name>
        <initializer>= &quot;Creating data-changing thread failed!\n&gt;&gt; &quot;</initializer>
        <briefdescription>
<para>Komunikat o błędzie tworzenia wątku odbiorczego TCP. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="82" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1add88aad349701a93666701c817c05de7" prot="public" static="no" mutable="no">
        <type>const char *</type>
        <definition>const char* downloadThreadFailed</definition>
        <argsstring></argsstring>
        <name>downloadThreadFailed</name>
        <initializer>= &quot;Creating download thread failed!\n&gt;&gt; &quot;</initializer>
        <briefdescription>
<para>Komunikat o błędzie tworzenia wątku obsłgi komendy DOWNLOAD. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="84" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="p2p-actions_8hpp_1a7e290573ef1be67b92a2c745e3b00d1d" prot="public" static="no" mutable="no">
        <type>uint64_t</type>
        <definition>uint64_t id</definition>
        <argsstring></argsstring>
        <name>id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="86" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="86" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="p2p-actions_8hpp_1a2ab9b7ae6d89824d769f8e708c7d2d18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void upload_action</definition>
        <argsstring>()</argsstring>
        <name>upload_action</name>
        <briefdescription>
<para>Uruchom wątek obsługi komendy UPLOAD. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="33" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="143" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a17e17b29a14595d5a96b1be404f2b681" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * upload_thread</definition>
        <argsstring>(void *par)</argsstring>
        <name>upload_thread</name>
        <param>
          <type>void *</type>
          <defname>par</defname>
        </param>
        <briefdescription>
<para>Ciało watku obslugujacego operacje dodania zasobu. </para>        </briefdescription>
        <detaileddescription>
<para>W przypadku udanego dodania rozsyla o tym fakcie informace wraz z danymi zasobu. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="34" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="155" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1adaf15af2407566d045f9bb49f9820fea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void delete_action</definition>
        <argsstring>()</argsstring>
        <name>delete_action</name>
        <briefdescription>
<para>Uruchom wątek obsługi komendy DELETE. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="35" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="186" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a6ed04fd72ed52702501ba802909032a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * delete_thread</definition>
        <argsstring>(void *par)</argsstring>
        <name>delete_thread</name>
        <param>
          <type>void *</type>
          <defname>par</defname>
        </param>
        <briefdescription>
<para>Cialo watku obslugujacego operacje usuniecia zasobu. </para>        </briefdescription>
        <detaileddescription>
<para>W przypadku udanego usuniecia zasobu, ktorego bylismy wlascicielami, rozsyla o tym fakcie informace wraz z danymi usunietego zasobu. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="36" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="199" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a24b786fe1ab7191fc9e2b8b3466c8bb4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void find_action</definition>
        <argsstring>()</argsstring>
        <name>find_action</name>
        <briefdescription>
<para>Uruchom wątek obslugi komendy FIND. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="37" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1014" bodyend="1020"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a31f2b8df5ad44703613e9c316246db1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * find_thread</definition>
        <argsstring>(void *par)</argsstring>
        <name>find_thread</name>
        <param>
          <type>void *</type>
          <defname>par</defname>
        </param>
        <briefdescription>
<para>Procedura wątku obsługi komendy find. </para>        </briefdescription>
        <detaileddescription>
<para>Funkcja przez okreslony czas zbiera informacje HAS_MSG na temat zasobow, (lub wyszukuje okreslona liczba zasobow), tworzy struktury, ktore umozliwia pobranie tych zasobow i przypisuje do nich liste peerow, od ktorych zasob mozna sciagnac. Rozwiazuje tez konflikty wlascicieli, jesli je stwierdzi. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="38" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1027" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1ab9192463ba13611e37fa2963c7a243f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * find_msg_sender_thread</definition>
        <argsstring>(void *par)</argsstring>
        <name>find_msg_sender_thread</name>
        <param>
          <type>void *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Cialo watku obsługi komendy FIND. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="39" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1190" bodyend="1200"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a95307f4fda47e905140d90ccb7bd2d19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * download_thread</definition>
        <argsstring>(void *par)</argsstring>
        <name>download_thread</name>
        <param>
          <type>void *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Ciało wątku pobierającego. </para>        </briefdescription>
        <detaileddescription>
<para>Próbuje znaleść zasób w sieci, jeżeli mu to się uda rozpoczyna pobieranie zasobu. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="41" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="609" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a02c06e9d9cdd58eebcb9166955e375a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * download_file</definition>
        <argsstring>(void *par)</argsstring>
        <name>download_file</name>
        <param>
          <type>void *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Funkcja odpowiadająca za pobieranie zasobu. </para>        </briefdescription>
        <detaileddescription>
<para>Rozsyła zapytania o zasoby do pierwszych HOST_NUMER dostępnych maszyn, następnie w pętli czego na odbiór fragmentu po czym go zapisuje. Po upłynięciu time-outu w czekaniu na fragment czyści liste dostępnych maszyn i wyszukuj je od nowa. W przypadku gdy nie ma żadnych dostępnych maszyn, w pętli czeka i rozsyła zapytanie FIND. Gdy są dostępne maszyny od których nie pobieramy, rozpoczyna pobieranie.</para><para>Co około 10% pobierania wypisuje o tym informacje. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="42" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="672" bodyend="828"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a4d4ec4d6650d05f4a0e17dc2b2d182b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void download_action</definition>
        <argsstring>()</argsstring>
        <name>download_action</name>
        <briefdescription>
<para>Uruchom wątek obsługi komendy DOWNLOAD. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="43" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="545" bodyend="551"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1abb59e02c4b2ff6de53498f2e3e710dc4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void check_files_validations</definition>
        <argsstring>()</argsstring>
        <name>check_files_validations</name>
        <briefdescription>
<para>Obsługa sytuacji niespójnych informacji o wlaścicielach zasobów. </para>        </briefdescription>
        <detaileddescription>
<para>Funkcja dla każdego zasobu, ktorego nie jest wlascicielem sprawdza, czy wlasciceil nie usunal tego zasobu (wysyla broadcast z informacja o zasobie i komunikatem OWN_MSG) Usuwa takze zasoby, ktorych powiazane pliki sa uszkodzone lub usuniete. Jesli wezel byl wlascicielem tych zasobow, rozsyla wiadomosc o ich usunieciu. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="44" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1357" bodyend="1393"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1aa4d004393a1ee3d47f4b077fbbbd6d1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * receiver_thread_UDP</definition>
        <argsstring>(void *par)</argsstring>
        <name>receiver_thread_UDP</name>
        <param>
          <type>void *</type>
          <defname>par</defname>
        </param>
        <briefdescription>
<para>Procedura wątku nasłuchującego komunikatów rozgłoszeniowych od innych węzłów sieci. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="45" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="843" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1aedb6b3c7ba36ba8a25ea0380aaa898ae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * receiver_thread_TCP</definition>
        <argsstring>(void *par)</argsstring>
        <name>receiver_thread_TCP</name>
        <param>
          <type>void *</type>
          <defname>par</defname>
        </param>
        <briefdescription>
<para>Wątek nasłuchujący na próby połączenia TCP w celu pobrania od nas danych. </para>        </briefdescription>
        <detaileddescription>
<para>W przypadku nawiązania uruchamia wątek obsługujący dane połączenie. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="46" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="227" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1ac59d846ee6ddec953a5afbd75c973ece" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * up_msg_reaction</definition>
        <argsstring>(void *par)</argsstring>
        <name>up_msg_reaction</name>
        <param>
          <type>void *</type>
          <defname>par</defname>
        </param>
        <briefdescription>
<para>Cialo watku, uruchamianego pod wplywem otrzymania komunikatu UP_MSG. </para>        </briefdescription>
        <detaileddescription>
<para>Jesli mamy zasob, o ktorym dostalismy inforamacje - odsylamy komunikat HAS_MSG czym powodujemy wywlaszczenie. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="47" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1208" bodyend="1220"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a221f1f68fc1576746fef07bc0b620217" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * has_msg_reaction</definition>
        <argsstring>(void *par)</argsstring>
        <name>has_msg_reaction</name>
        <param>
          <type>void *</type>
          <defname>par</defname>
        </param>
        <briefdescription>
<para>Cialo watku, uruchamianego pod wplywem otrzymania komunikatu HAS_MSG. </para>        </briefdescription>
        <detaileddescription>
<para>Jesli z informacji o zasobie wynika, ze mamy do niego przypisanego wlasciciela pasozytniczego - nastepuje zmiana wlasciciela. W razie konfliktow wlascicieli i rownosci czasow dodania - rozsylane jest zadanie natychmiastowego usuniecia zasobu - FORCE_DEL </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="48" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1229" bodyend="1258"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1af75026c0f1826128fd1fece887e8f350" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * del_msg_reaction</definition>
        <argsstring>(void *par)</argsstring>
        <name>del_msg_reaction</name>
        <param>
          <type>void *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Cialo watku, uruchamianego pod wplywem otrzymania komunikatu DEL_MSG. </para>        </briefdescription>
        <detaileddescription>
<para>Funkcja natychmiast usuwa zasob, o ktorym otrzymala informacje, jesli go posiada i spelniony jest ktorys z warunkow: a)informacje o wlascicielach sa zgodne b)czas dodania zasobu przez wlasciciela uzyskany z wiadomosci jest wczesniejszy niz zapisany w lokalnym wezle </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="49" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1268" bodyend="1289"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a65f0119ca71f68088a44ceda9f4e58ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * force_del_msg_reaction</definition>
        <argsstring>(void *par)</argsstring>
        <name>force_del_msg_reaction</name>
        <param>
          <type>void *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Cialo watku, uruchamianego pod wplywem otrzymania komunikatu FORCE_DEL_MSG lub DONT_MSG. </para>        </briefdescription>
        <detaileddescription>
<para>Funkcja natychmiast usuwa zasob, o ktorym otrzymala informacje, jesli go posiada. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="50" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1295" bodyend="1306"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a697d21a3e3ff4e102ca680bab0c7baca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * find_msg_reaction</definition>
        <argsstring>(void *par)</argsstring>
        <name>find_msg_reaction</name>
        <param>
          <type>void *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Cialo watku, uruchamianego pod wplywem otrzymania komunikatu FIND_MSG. </para>        </briefdescription>
        <detaileddescription>
<para>Fukcja wyszukuje zasoby, ktore pasuja do przyslanych kryteriow wyszukiwania, a ktore mamy sciagniete w calosci. Wysyla informacje o tych zasobach wraz z wiadomoscia HAS_MSG do wezla, od ktorego otrzymalismy komunikat FIND_MSG na port, na ktorym nasłuchuje wątek wyszukiwania zasobow. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="51" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1315" bodyend="1327"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a2e9bd3fb9982491e864396e5de65b3b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * own_msg_reaction</definition>
        <argsstring>(void *par)</argsstring>
        <name>own_msg_reaction</name>
        <param>
          <type>void *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Cialo watku, uruchamianego pod wplywem otrzymania komunikatu OWN_MSG. </para>        </briefdescription>
        <detaileddescription>
<para>Funkcja sprawdza, czy mamy zasob, o ktorym informacje otrzymalismy. Jesli nie, a bylismy jego wlascicielem, odsylamy do wezla, ktory przyslal nam wiadomosc OWN_MSG komunikat DONT_MSG. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="52" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1335" bodyend="1347"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a72d35cc15f836ee6ccf7f1172bb92c6b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void * response_down_tcp</definition>
        <argsstring>(void *par)</argsstring>
        <name>response_down_tcp</name>
        <param>
          <type>void *</type>
          <declname>par</declname>
        </param>
        <briefdescription>
<para>Ciało wątku obsługującego zapytanie DOWN. </para>        </briefdescription>
        <detaileddescription>
<para>Po odebraniu wiadomości sprawdza o jaki fragmenty jesteśmy pytani i odsyła je kolejno. W przypadku wystąpienia problemów i zakończenia transmisji wysyła fragment z numerem 0 co oznacza zakończenie transmisji. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="53" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="282" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1abcc87808a48c4da216aedbbcd5e1bf1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void send_broadcast</definition>
        <argsstring>(ResourceHeader *header)</argsstring>
        <name>send_broadcast</name>
        <param>
          <type><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Wyslanie na adres rozgłoszeniowy wskazanej struktury <ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="54" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="932" bodyend="971"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void send_response</definition>
        <argsstring>(NetMsg *data, int port)</argsstring>
        <name>send_response</name>
        <param>
          <type><ref refid="class_net_msg" kindref="compound">NetMsg</ref> *</type>
          <declname>netMsg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>port</declname>
          <defval><ref refid="params_8h_1a11717c934f77ad5167dac5d28562d85a" kindref="member">PORT</ref></defval>
        </param>
        <briefdescription>
<para>Wyslanie wiadomosci, ktorej tresc i adres odbiorcy zapisane sa w obiekcie <ref refid="class_net_msg" kindref="compound">NetMsg</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="55" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="976" bodyend="1011"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a60cb601cfa9c5453e8f69a268664f5f0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool recive_fragment</definition>
        <argsstring>(deque&lt; Host &gt;::iterator it, FileDownload file_downloading)</argsstring>
        <name>recive_fragment</name>
        <param>
          <type>deque&lt; <ref refid="class_host" kindref="compound">Host</ref> &gt;::iterator</type>
          <declname>it</declname>
        </param>
        <param>
          <type><ref refid="class_file_download" kindref="compound">FileDownload</ref></type>
          <declname>file_downloading</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1aaee5fea624effb5c8b9eaa789c173af9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void close_hosts_sockets</definition>
        <argsstring>(deque&lt; Host &gt; *collection)</argsstring>
        <name>close_hosts_sockets</name>
        <param>
          <type>deque&lt; <ref refid="class_host" kindref="compound">Host</ref> &gt; *</type>
          <declname>collection</declname>
        </param>
        <briefdescription>
<para>Funkcja zamykająca połączenia z maszynami z zadanej listy hostów. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="57" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="831" bodyend="839"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a32ec486b12fb09a1f30013437b3e9ef0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void write_progress_of_download</definition>
        <argsstring>(list&lt; Resource &gt;::iterator *file)</argsstring>
        <name>write_progress_of_download</name>
        <param>
          <type>list&lt; <ref refid="struct_resource" kindref="compound">Resource</ref> &gt;::iterator *</type>
          <declname>file</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="58" column="1"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a7a9bfaef3861c921ac186d5e991bbe22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int get_next_fragments</definition>
        <argsstring>(Interval *result, vector&lt; long &gt; *input, int *intervals_count, int portion, int from)</argsstring>
        <name>get_next_fragments</name>
        <param>
          <type><ref refid="struct_interval" kindref="compound">Interval</ref> *</type>
          <declname>result</declname>
        </param>
        <param>
          <type>vector&lt; long &gt; *</type>
          <declname>input</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>intervals_count</declname>
        </param>
        <param>
          <type>int</type>
          <declname>portion</declname>
        </param>
        <param>
          <type>int</type>
          <declname>from</declname>
        </param>
        <briefdescription>
<para>Funkcja obliczająca o jakie fragmenty pobieranego pliku spytać. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>- parametr wynikowy, lista przedziałów o które mamy spytać. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>intervals_count</parametername>
</parameternamelist>
<parameterdescription>
<para>- parametr wynikowy, liczba przedziałów. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>- lista brakujących bloków. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>portion</parametername>
</parameternamelist>
<parameterdescription>
<para>- liczba fragmentów o które zapytamy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>from</parametername>
</parameternamelist>
<parameterdescription>
<para>- ostatni fragment o który zapytaliśmy. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Numer ostatniego fragmentu o który zapytamy. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="59" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="368" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1adffeb79fb01e324c14f5820b33789c50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="struct_file_i_d_struct" kindref="compound">FileIDStruct</ref></type>
        <definition>struct FileIDStruct fileid_from_header</definition>
        <argsstring>(ResourceHeader *header)</argsstring>
        <name>fileid_from_header</name>
        <param>
          <type><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref> *</type>
          <declname>header</declname>
        </param>
        <briefdescription>
<para>Funkcja pomocnicza tworząca strukturę FileID z nagłówka wiadomości. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="59" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="588" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1affba638d3f46b649f54d033ffebe6708" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref></type>
        <definition>ResourceHeader header_from_command_data</definition>
        <argsstring>(CommandData *data)</argsstring>
        <name>header_from_command_data</name>
        <param>
          <type><ref refid="struct_command_data" kindref="compound">CommandData</ref> *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Generator nagłówka wiadomości do wysłania z danych w <ref refid="struct_command_data" kindref="compound">CommandData</ref>. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="61" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="554" bodyend="569"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a6bf39b6e3b4fb8b7779dcd0aef415ffc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void run_downloadings</definition>
        <argsstring>()</argsstring>
        <name>run_downloadings</name>
        <briefdescription>
<para>Funkcja uruchamiająca procesy pobierania niedokończone podczas ostatniego działania aplikacji. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="62" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="1396" bodyend="1413"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void safe_cout</definition>
        <argsstring>(string str)</argsstring>
        <name>safe_cout</name>
        <param>
          <type>string</type>
          <declname>str</declname>
        </param>
        <briefdescription>
<para>Bezpieczne wypisywanie na stdout z relizacją wzajemnego wykluczania. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="96" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="96" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a0b8da71bf10f209b0dfa41f04551c4fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void main_init</definition>
        <argsstring>()</argsstring>
        <name>main_init</name>
        <briefdescription>
<para>Procedura wołana bezpośrednio po uruchomieniu programu. </para>        </briefdescription>
        <detaileddescription>
<para>Inicjuje mutexy, pobiera ID obecnego klienta, deserializuje metadane tworzy wątki nasłuchując, sprawdza poprawność danych oraz uruchamia przerwane procesy pobierania. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="108" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="108" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1abf9790d30a8205752222da4571a3b243" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void main_destroy</definition>
        <argsstring>()</argsstring>
        <name>main_destroy</name>
        <briefdescription>
<para>Destrukcja muteksów i innych zasobów wymagających zwolnienia. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="135" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="135" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a2400942dd94b34b1ba3409c4830ca292" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool send_down_message</definition>
        <argsstring>(DownMsg *down_msg, int socket_tcp)</argsstring>
        <name>send_down_message</name>
        <param>
          <type><ref refid="struct_down_msg" kindref="compound">DownMsg</ref> *</type>
          <declname>down_msg</declname>
        </param>
        <param>
          <type>int</type>
          <declname>socket_tcp</declname>
        </param>
        <briefdescription>
<para>Wyślij wiadomość DOWN. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="419" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="419" bodyend="427"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1ad7bf772208926a302dbc6fdc69b1dfc0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool recive_fragment</definition>
        <argsstring>(deque&lt; Host &gt;::iterator *host, FileDownload *file_downloading, int *fragment_counter)</argsstring>
        <name>recive_fragment</name>
        <param>
          <type>deque&lt; <ref refid="class_host" kindref="compound">Host</ref> &gt;::iterator *</type>
          <declname>host</declname>
        </param>
        <param>
          <type><ref refid="class_file_download" kindref="compound">FileDownload</ref> *</type>
          <declname>file_downloading</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>fragment_counter</declname>
        </param>
        <briefdescription>
<para>Funkcja zajmująca się odbiorem pojedyńczego fragmentu zasobu. </para>        </briefdescription>
        <detaileddescription>
<para>W przypadku wystąpienia problemów z odbiorem, usuwa nadawce z listy maszyn od których pobieramy. W przypadku gdy był to ostatni pakiet na który czekaliśmy od danego nadawcy a) jeżeli był najwolniejszym dostawcą, usuwa go z listy maszyn od których pobieramy b) w. p. p. prosi go o następne fragmenty</para><para><simplesect kind="return"><para>true gdy udało się odebrać fragment, false w przeciwnym wypadku. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="441" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="441" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1ae70bf79d3db0750038204fef41520545" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void write_progress_of_download</definition>
        <argsstring>(list&lt; Resource &gt;::iterator *file, bool break_downloading)</argsstring>
        <name>write_progress_of_download</name>
        <param>
          <type>list&lt; <ref refid="struct_resource" kindref="compound">Resource</ref> &gt;::iterator *</type>
          <declname>file</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>break_downloading</declname>
        </param>
        <briefdescription>
<para>Wyświetla komunikat o postępie pobierania. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>break_downloading</parametername>
</parameternamelist>
<parameterdescription>
<para>gdy true, wypisuje informacje o przerwaniu pobierania pliku. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="523" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="523" bodyend="542"/>
      </memberdef>
      <memberdef kind="function" id="p2p-actions_8hpp_1a574d479a5acf27645c25800202c2fac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref></type>
        <definition>ResourceHeader header_from_id</definition>
        <argsstring>(FileID *file, MsgType type)</argsstring>
        <name>header_from_id</name>
        <param>
          <type><ref refid="structs_8h_1ad2196a018ba2b7686a1088e9b0feacd3" kindref="member">FileID</ref> *</type>
          <declname>file</declname>
        </param>
        <param>
          <type><ref refid="params_8h_1a2ea0bb09adcce7f655e8f8ee8d30561b" kindref="member">MsgType</ref></type>
          <declname>type</declname>
        </param>
        <briefdescription>
<para>Generator nagłówka wiadomości do wysłania z danych w FileID. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" line="572" column="1" bodyfile="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp" bodystart="572" bodyend="585"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Obsługa komend interpretera, w tym sieciowa logika aplikacji. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="5"><highlight class="preprocessor">#ifndef<sp/>P2P_ACTIONS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>P2P_ACTIONS_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="data_8hpp" kindref="compound">data.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespacestd" kindref="compound">std</ref>;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*************************</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DEKLARACJE</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="18" refid="struct_command_data" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref><sp/>{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>filePath;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>fileName;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>fileSize;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_file_i_ds_struct" kindref="compound">FileIDs</ref><sp/>ids;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>find_one;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>find_all;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>find_first;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>find_first_count;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>writing;</highlight></codeline>
<codeline lineno="28"><highlight class="normal">};</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="p2p-actions_8hpp_1ad947d52b8870c3081e69adc0cdf5a518" refkind="member"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref><sp/><ref refid="p2p-actions_8hpp_1ad947d52b8870c3081e69adc0cdf5a518" kindref="member">cmdata</ref>;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="p2p-actions_8hpp_1a2ab9b7ae6d89824d769f8e708c7d2d18" kindref="member">upload_action</ref>();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a17e17b29a14595d5a96b1be404f2b681" kindref="member">upload_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="p2p-actions_8hpp_1adaf15af2407566d045f9bb49f9820fea" kindref="member">delete_action</ref>();</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a6ed04fd72ed52702501ba802909032a9" kindref="member">delete_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="p2p-actions_8hpp_1a24b786fe1ab7191fc9e2b8b3466c8bb4" kindref="member">find_action</ref>();</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a31f2b8df5ad44703613e9c316246db1e" kindref="member">find_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1ab9192463ba13611e37fa2963c7a243f5" kindref="member">find_msg_sender_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*par);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1ab9192463ba13611e37fa2963c7a243f5" kindref="member">find_msg_sender_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*par);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a95307f4fda47e905140d90ccb7bd2d19" kindref="member">download_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a02c06e9d9cdd58eebcb9166955e375a8" kindref="member">download_file</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par);</highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><sp/><ref refid="p2p-actions_8hpp_1a4d4ec4d6650d05f4a0e17dc2b2d182b8" kindref="member">download_action</ref>();</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1abb59e02c4b2ff6de53498f2e3e710dc4" kindref="member">check_files_validations</ref>();</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1aa4d004393a1ee3d47f4b077fbbbd6d1e" kindref="member">receiver_thread_UDP</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1aedb6b3c7ba36ba8a25ea0380aaa898ae" kindref="member">receiver_thread_TCP</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1ac59d846ee6ddec953a5afbd75c973ece" kindref="member">up_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a221f1f68fc1576746fef07bc0b620217" kindref="member">has_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1af75026c0f1826128fd1fece887e8f350" kindref="member">del_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par);</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a65f0119ca71f68088a44ceda9f4e58ef" kindref="member">force_del_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a697d21a3e3ff4e102ca680bab0c7baca" kindref="member">find_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par);</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a2e9bd3fb9982491e864396e5de65b3b8" kindref="member">own_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a72d35cc15f836ee6ccf7f1172bb92c6b" kindref="member">response_down_tcp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par);</highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1abcc87808a48c4da216aedbbcd5e1bf1e" kindref="member">send_broadcast</ref>(<ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/>*header);</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(<ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>*netMsg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port<sp/>=<sp/><ref refid="params_8h_1a11717c934f77ad5167dac5d28562d85a" kindref="member">PORT</ref>);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1ad7bf772208926a302dbc6fdc69b1dfc0" kindref="member">recive_fragment</ref>(deque&lt;Host&gt;::iterator<sp/>it,<sp/><ref refid="class_file_download" kindref="compound">FileDownload</ref><sp/>file_downloading);</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1aaee5fea624effb5c8b9eaa789c173af9" kindref="member">close_hosts_sockets</ref>(deque&lt;Host&gt;<sp/>*collection);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1ae70bf79d3db0750038204fef41520545" kindref="member">write_progress_of_download</ref>(list&lt;Resource&gt;::iterator*<sp/>file);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a7a9bfaef3861c921ac186d5e991bbe22" kindref="member">get_next_fragments</ref>(<ref refid="struct_interval" kindref="compound">Interval</ref>*<sp/>result,<sp/>vector&lt;long&gt;*<sp/>input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>intervals_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>portion,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from);</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_file_i_d_struct" kindref="compound">FileIDStruct</ref><sp/><ref refid="p2p-actions_8hpp_1adffeb79fb01e324c14f5820b33789c50" kindref="member">fileid_from_header</ref>(<ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref>*<sp/>header);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/><ref refid="p2p-actions_8hpp_1affba638d3f46b649f54d033ffebe6708" kindref="member">header_from_command_data</ref>(<ref refid="struct_command_data" kindref="compound">CommandData</ref>*<sp/>data);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a6bf39b6e3b4fb8b7779dcd0aef415ffc" kindref="member">run_downloadings</ref>();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="p2p-actions_8hpp_1a762a9fd65391371e2d3211e74db61e9b" refkind="member"><highlight class="normal">pthread_mutex_t<sp/><ref refid="p2p-actions_8hpp_1a762a9fd65391371e2d3211e74db61e9b" kindref="member">termtx</ref>;</highlight></codeline>
<codeline lineno="68" refid="p2p-actions_8hpp_1a684bce3cb0f8da566840509d50481068" refkind="member"><highlight class="normal">pthread_mutex_t<sp/><ref refid="p2p-actions_8hpp_1a684bce3cb0f8da566840509d50481068" kindref="member">cmtx</ref>;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="p2p-actions_8hpp_1a97554b6c78c83007858cbb8e88a78b61" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a97554b6c78c83007858cbb8e88a78b61" kindref="member">welcome</ref><sp/>=<sp/></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Welcome<sp/>in<sp/>Pompous<sp/>AAP<sp/>File<sp/>Transfer<sp/>Protocol<sp/>v1.0!\nRemember:<sp/>your<sp/>computer<sp/>is<sp/>your<sp/>friend.\n\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="74" refid="p2p-actions_8hpp_1a5c0a0d2a5f917da7806df3849670f95c" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a5c0a0d2a5f917da7806df3849670f95c" kindref="member">prompt</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="76" refid="p2p-actions_8hpp_1accf4a9f1a7a43f110d590e364d8c40f5" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1accf4a9f1a7a43f110d590e364d8c40f5" kindref="member">errMsg</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;command<sp/>error&quot;</highlight><highlight class="normal">;<sp/></highlight></codeline>
<codeline lineno="78" refid="p2p-actions_8hpp_1a1fe55dfbf09256d5ecccba3673a29a5c" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a1fe55dfbf09256d5ecccba3673a29a5c" kindref="member">threadFailed</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>command<sp/>thread<sp/>failed!\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="80" refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" kindref="member">receiverFailed</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>receiver<sp/>thread<sp/>failed!\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82" refid="p2p-actions_8hpp_1a734452668d00adefa24acabc599d88bd" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a734452668d00adefa24acabc599d88bd" kindref="member">tcpThreadFailed</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>data-changing<sp/>thread<sp/>failed!\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="84" refid="p2p-actions_8hpp_1add88aad349701a93666701c817c05de7" refkind="member"><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1add88aad349701a93666701c817c05de7" kindref="member">downloadThreadFailed</ref><sp/>=<sp/></highlight><highlight class="stringliteral">&quot;Creating<sp/>download<sp/>thread<sp/>failed!\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">uint64_t<sp/>id;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight><highlight class="comment">/***************************</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PROCEDURY</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>***************************/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96" refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>str)<sp/>{</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_lock(&amp;<ref refid="p2p-actions_8hpp_1a762a9fd65391371e2d3211e74db61e9b" kindref="member">termtx</ref>);</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/>cout&lt;&lt;str;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/>fflush(stdout);</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_unlock(&amp;<ref refid="p2p-actions_8hpp_1a762a9fd65391371e2d3211e74db61e9b" kindref="member">termtx</ref>);</highlight></codeline>
<codeline lineno="101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="108" refid="p2p-actions_8hpp_1a0b8da71bf10f209b0dfa41f04551c4fc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a0b8da71bf10f209b0dfa41f04551c4fc" kindref="member">main_init</ref>()<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;<ref refid="p2p-actions_8hpp_1a762a9fd65391371e2d3211e74db61e9b" kindref="member">termtx</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_init(&amp;<ref refid="p2p-actions_8hpp_1a684bce3cb0f8da566840509d50481068" kindref="member">cmtx</ref>,<sp/>NULL);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1a9f9ce666365f27074a032061ed21b96e" kindref="member">initiateMutexes</ref>();</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="data_8hpp_1a2f7a6c53de0e389a922c7613b641d83a" kindref="member">get_id</ref>();</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//Tu<sp/>jest<sp/>deserializacja</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Loading<sp/>metadata:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="data_8hpp_1a2357c582d35d9ae38dd79b66aec36ecf" kindref="member">deserializeMetaData</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>receiverThreadUDP;</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;receiverThreadUDP,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1aa4d004393a1ee3d47f4b077fbbbd6d1e" kindref="member">receiver_thread_UDP</ref>,<sp/>NULL))<sp/></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" kindref="member">receiverFailed</ref>);</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>receiverThreadTCP;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;receiverThreadTCP,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1aedb6b3c7ba36ba8a25ea0380aaa898ae" kindref="member">receiver_thread_TCP</ref>,<sp/>NULL))<sp/></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" kindref="member">receiverFailed</ref>);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a6bf39b6e3b4fb8b7779dcd0aef415ffc" kindref="member">run_downloadings</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1abb59e02c4b2ff6de53498f2e3e710dc4" kindref="member">check_files_validations</ref>();</highlight></codeline>
<codeline lineno="132"><highlight class="normal">}</highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="p2p-actions_8hpp_1abf9790d30a8205752222da4571a3b243" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1abf9790d30a8205752222da4571a3b243" kindref="member">main_destroy</ref>()<sp/>{</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_destroy(&amp;<ref refid="p2p-actions_8hpp_1a762a9fd65391371e2d3211e74db61e9b" kindref="member">termtx</ref>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_mutex_destroy(&amp;<ref refid="p2p-actions_8hpp_1a684bce3cb0f8da566840509d50481068" kindref="member">cmtx</ref>);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1a36c612ff549082b179c5b61e43172944" kindref="member">destroyMutexes</ref>();</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Saving<sp/>metadata:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="data_8hpp_1a536b6d7add4d4fdca93c5de0f945c130" kindref="member">serializeMetaData</ref>())<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="p2p-actions_8hpp_1a2ab9b7ae6d89824d769f8e708c7d2d18" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a2ab9b7ae6d89824d769f8e708c7d2d18" kindref="member">upload_action</ref>()<sp/>{</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>uploadThread;</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;uploadThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a17e17b29a14595d5a96b1be404f2b681" kindref="member">upload_thread</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;<ref refid="p2p-actions_8hpp_1ad947d52b8870c3081e69adc0cdf5a518" kindref="member">cmdata</ref>))</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1a1fe55dfbf09256d5ecccba3673a29a5c" kindref="member">threadFailed</ref>);</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal">}</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight></codeline>
<codeline lineno="155" refid="p2p-actions_8hpp_1a17e17b29a14595d5a96b1be404f2b681" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a17e17b29a14595d5a96b1be404f2b681" kindref="member">upload_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref><sp/>parT<sp/>=<sp/>*((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref>*)par);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Uploading<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>parT.fileName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;...\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;Resource&gt;::iterator<sp/>it;</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>it<sp/>=<sp/><ref refid="data_8hpp_1a60695726d9d0486ddd7a54bafb820795" kindref="member">addFile</ref>(parT.filePath,<sp/>parT.fileName);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="data_8hpp_1a16e15afd1548a312e4890df78251debb" kindref="member">isValidResource</ref>(it))</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Uploading<sp/>unsuccessfull!<sp/>Invalid<sp/>path\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(strcmp(it-&gt;id-&gt;name,parT.fileName.c_str()))</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Uploading<sp/>unsuccessfull!<sp/>In<sp/>storage<sp/>exists<sp/>resource,<sp/>which<sp/>shares<sp/>that<sp/>file.\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;filePathName<sp/>!=<sp/>parT.filePath)</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Uploading<sp/>unsuccessfull!<sp/>In<sp/>storage<sp/>exists<sp/>resource,<sp/>which<sp/>has<sp/>the<sp/>same<sp/>name<sp/>and<sp/>size<sp/>\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>parT.fileName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>uploaded!<sp/>Size:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(it-&gt;id-&gt;size)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>netMsg;</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.<ref refid="class_net_msg_1a7a33b55595a5cf9b8ad2118d393bbd7b" kindref="member">setFileId</ref>(it-&gt;id);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.header.type<sp/>=<sp/>UP_MSG;</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1abcc87808a48c4da216aedbbcd5e1bf1e" kindref="member">send_broadcast</ref>(&amp;(netMsg.header));</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="183"><highlight class="normal">}</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight></codeline>
<codeline lineno="186" refid="p2p-actions_8hpp_1adaf15af2407566d045f9bb49f9820fea" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1adaf15af2407566d045f9bb49f9820fea" kindref="member">delete_action</ref>()<sp/>{</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>deleteThread;</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;deleteThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a6ed04fd72ed52702501ba802909032a9" kindref="member">delete_thread</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;<ref refid="p2p-actions_8hpp_1ad947d52b8870c3081e69adc0cdf5a518" kindref="member">cmdata</ref>))</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1a1fe55dfbf09256d5ecccba3673a29a5c" kindref="member">threadFailed</ref>);</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="192"><highlight class="normal">}</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="199" refid="p2p-actions_8hpp_1a6ed04fd72ed52702501ba802909032a9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a6ed04fd72ed52702501ba802909032a9" kindref="member">delete_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)<sp/>{</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref><sp/>parT<sp/>=<sp/>*((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref>*)par);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Deleting<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>parT.fileName<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;...\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref><sp/>fid;</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/>fid<sp/>=<sp/><ref refid="data_8hpp_1ad319bb1cb29b05901905d84f8c56f7ff" kindref="member">deleteFile</ref>(parT.fileName);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fid.name<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Deleting<sp/>unsuccessfull!\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Deleted<sp/>file<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(fid.name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;...\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(fid.owner)<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>netMsg;</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.<ref refid="class_net_msg_1a7a33b55595a5cf9b8ad2118d393bbd7b" kindref="member">setFileId</ref>(&amp;fid);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.header.type<sp/>=<sp/>DEL_MSG;</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1abcc87808a48c4da216aedbbcd5e1bf1e" kindref="member">send_broadcast</ref>(&amp;(netMsg.header));</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)fid.name);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)fid.owner);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="227" refid="p2p-actions_8hpp_1aedb6b3c7ba36ba8a25ea0380aaa898ae" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1aedb6b3c7ba36ba8a25ea0380aaa898ae" kindref="member">receiver_thread_TCP</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)<sp/></highlight></codeline>
<codeline lineno="228"><highlight class="normal">{</highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock,<sp/>length;</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>server;</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>client;</highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(client);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgsock;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/>sock<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_STREAM,<sp/>IPPROTO_TCP);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;DOWN<sp/>loop:<sp/>Opening<sp/>stream<sp/>socket\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/>setsockopt(sock,<sp/>SOL_SOCKET,<sp/>SO_REUSEPORT,<sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*)<sp/>&amp;optval<sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(optval));</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_family=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_addr.s_addr<sp/>=<sp/>htonl(INADDR_ANY);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_port<sp/>=<sp/>htons(<ref refid="params_8h_1a11717c934f77ad5167dac5d28562d85a" kindref="member">PORT</ref>);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(sock,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;server,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>server)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;DOWN<sp/>loop:<sp/>Binding<sp/>stream<sp/>socket\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(listen(sock,<sp/><ref refid="params_8h_1ab15ce9f15bb1f848cb0abfd574d821fb" kindref="member">TCP_ONE_TIME_CONNECTION</ref>)!=<sp/>0)</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror<sp/>(</highlight><highlight class="stringliteral">&quot;DOWN<sp/>loop:<sp/>Listen<sp/>call<sp/>error\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">do</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msgsock<sp/>=<sp/>accept(sock,(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>0,(socklen_t*)<sp/>0);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(msgsock<sp/>==<sp/>-1<sp/>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;DOWN<sp/>loop:<sp/>Accept<sp/>call<sp/>error\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_t<sp/>responseTCP;</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;responseTCP,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a72d35cc15f836ee6ccf7f1172bb92c6b" kindref="member">response_down_tcp</ref>,<sp/>&amp;msgsock))<sp/></highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1a734452668d00adefa24acabc599d88bd" kindref="member">tcpThreadFailed</ref>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="271"><highlight class="normal">}</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="282" refid="p2p-actions_8hpp_1a72d35cc15f836ee6ccf7f1172bb92c6b" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a72d35cc15f836ee6ccf7f1172bb92c6b" kindref="member">response_down_tcp</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)</highlight></codeline>
<codeline lineno="283"><highlight class="normal">{</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgsock<sp/>=<sp/>*((</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)par);</highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rec_bytes;</highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_down_msg" kindref="compound">DownMsg</ref><sp/>down_msg;</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>number_of_block;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/>socklen_t<sp/>length;</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>clientaddr;</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(clientaddr);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/>rec_bytes<sp/>=<sp/>recvfrom(msgsock,<sp/>&amp;down_msg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(down_msg),<sp/>0,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;clientaddr,<sp/><sp/>&amp;length);</highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(rec_bytes<sp/>&lt;<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(down_msg))</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(msgsock);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>net_msg(&amp;down_msg,<sp/>&amp;clientaddr,<sp/>&amp;length);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref>*<sp/>file<sp/>=<sp/><ref refid="data_8hpp_1af41ac35f7bec745690a4038c692e23d3" kindref="member">isFileInStorage</ref>(&amp;net_msg.header);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>send_cant;</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_cant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_cant<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!send_cant)</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>net_msg.blocks.size();<sp/>++i)</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="data_8hpp_1af41ac35f7bec745690a4038c692e23d3" kindref="member">isFileInStorage</ref>(&amp;net_msg.header)<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(msgsock);</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>=<sp/><ref refid="p2p-actions_8hpp_1adffeb79fb01e324c14f5820b33789c50" kindref="member">fileid_from_header</ref>(&amp;net_msg.header);</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_file_fragment" kindref="compound">FileFragment</ref>*<sp/>file_fragment<sp/>=<sp/><ref refid="data_8hpp_1a7f3ebb7cc672825f174046fea067d411" kindref="member">getFileFragment</ref>(&amp;</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/>net_msg.blocks[i]);<sp/></highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.name;</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.owner;</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file_fragment<sp/>==<sp/>NULL)</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>send_cant<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendto(msgsock,<sp/>file_fragment,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_file_fragment" kindref="compound">FileFragment</ref>),<sp/>MSG_NOSIGNAL,<sp/></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sockaddr<sp/>*)&amp;clientaddr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(&amp;clientaddr))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file_fragment;</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(msgsock);</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>file_fragment;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(send_cant)</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_file_fragment" kindref="compound">FileFragment</ref><sp/>file;</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file.number<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendto(msgsock,<sp/>&amp;file,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(file),<sp/>0,<sp/></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sockaddr<sp/>*)&amp;clientaddr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(&amp;clientaddr))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(msgsock);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/>close(msgsock);</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="p2p-actions_8hpp_1a7a9bfaef3861c921ac186d5e991bbe22" refkind="member"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a7a9bfaef3861c921ac186d5e991bbe22" kindref="member">get_next_fragments</ref>(<ref refid="struct_interval" kindref="compound">Interval</ref>*<sp/>result,<sp/>vector&lt;long&gt;*<sp/>input,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>intervals_count,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>portion,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>from)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(result,<sp/>64<sp/>*<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_interval" kindref="compound">Interval</ref>));</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j<sp/>,<sp/>choosen_fragments;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"><sp/><sp/><sp/><sp/>choosen_fragments<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>input-&gt;size();<sp/>++i)</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*input)[i]<sp/>&gt;<sp/>from)</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>input-&gt;size())</highlight></codeline>
<codeline lineno="380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="381"><highlight class="normal"></highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>64<sp/>&amp;&amp;<sp/>choosen_fragments<sp/>&lt;<sp/>portion<sp/>&amp;&amp;<sp/>choosen_fragments<sp/>&lt;<sp/>input-&gt;size();<sp/>++j)</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_interval" kindref="compound">Interval</ref><sp/>tmp;</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.start<sp/>=<sp/>(*input)[i];</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.end<sp/>=<sp/>(*input)[i];</highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>&lt;<sp/>input-&gt;size())</highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++choosen_fragments;</highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/>portion<sp/>&amp;&amp;<sp/>choosen_fragments<sp/>&lt;<sp/>portion<sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>input-&gt;size();<sp/>++k)</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp.start<sp/>+<sp/>k<sp/>==<sp/>(*input)[i]<sp/>-<sp/>1)</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp.end<sp/>=<sp/>(*input)[i];</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++i;</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++choosen_fragments;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>result[j]<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>input-&gt;size())</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>i<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="408"><highlight class="normal"></highlight></codeline>
<codeline lineno="409"><highlight class="normal"></highlight></codeline>
<codeline lineno="410"><highlight class="normal"></highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/>*intervals_count<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(i<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*input)[input-&gt;size()-1];</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(*input)[i-1];</highlight></codeline>
<codeline lineno="416"><highlight class="normal">}</highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight></codeline>
<codeline lineno="419" refid="p2p-actions_8hpp_1a2400942dd94b34b1ba3409c4830ca292" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a2400942dd94b34b1ba3409c4830ca292" kindref="member">send_down_message</ref>(<ref refid="struct_down_msg" kindref="compound">DownMsg</ref>*<sp/>down_msg,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>socket_tcp)</highlight></codeline>
<codeline lineno="420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(send(socket_tcp,<sp/>down_msg,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_down_msg" kindref="compound">DownMsg</ref>),<sp/>0)<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(socket_tcp);</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="427"><highlight class="normal">}</highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight></codeline>
<codeline lineno="441" refid="p2p-actions_8hpp_1ad7bf772208926a302dbc6fdc69b1dfc0" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1ad7bf772208926a302dbc6fdc69b1dfc0" kindref="member">recive_fragment</ref>(deque&lt;Host&gt;::iterator<sp/>*host,<sp/><ref refid="class_file_download" kindref="compound">FileDownload</ref><sp/>*file_downloading,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>fragment_counter)</highlight></codeline>
<codeline lineno="442"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="443"><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>*clientaddr;</highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>length;</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_file_fragment" kindref="compound">FileFragment</ref><sp/>file_fragment;</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rec_bytes,<sp/>tmp_rec_bytes;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/>rec_bytes<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="449"><highlight class="normal"></highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(rec_bytes<sp/>!=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_file_fragment" kindref="compound">FileFragment</ref>))</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp_rec_bytes<sp/>=<sp/>recvfrom((*host)-&gt;sock,<sp/>&amp;file_fragment<sp/>+<sp/>rec_bytes,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="struct_file_fragment" kindref="compound">FileFragment</ref>)<sp/>-<sp/>rec_bytes,<sp/>0,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>clientaddr,<sp/><sp/>(socklen_t*)<sp/>&amp;length);</highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(tmp_rec_bytes<sp/>&lt;=<sp/>8)</highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close((*host)-&gt;sock);<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*host)<sp/>=<sp/>file_downloading-&gt;using_hosts.erase((*host));</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rec_bytes<sp/>+=<sp/>tmp_rec_bytes;</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file_fragment.number<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*host)<sp/>=<sp/>file_downloading-&gt;using_hosts.erase((*host));</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="data_8hpp_1abe48d7a77b7a67d434c71d66fadb7af8" kindref="member">saveFileFragment</ref>((*file_downloading-&gt;file)-&gt;id,<sp/>&amp;file_fragment))</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;Resource&gt;::iterator*<sp/>res<sp/>=<sp/>file_downloading-&gt;file;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*host)-&gt;is_all_fragments()<sp/>&amp;&amp;<sp/>(*res)-&gt;missingBlocks.size()!=<sp/>0)<sp/></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file_downloading-&gt;<ref refid="class_file_download_1a2ca59a43163f426d72206b04e213d202" kindref="member">speed_in_hosts</ref>((*host)-&gt;get_speed())<sp/>==<sp/><ref refid="params_8h_1acb2e2f20f8ff6363fe6b3a60cc394c5b" kindref="member">HOST_NUMER</ref><sp/>&amp;&amp;<sp/><ref refid="params_8h_1acb2e2f20f8ff6363fe6b3a60cc394c5b" kindref="member">HOST_NUMER</ref><sp/>!=<sp/>1)</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close((*host)-&gt;sock);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading-&gt;avaiable_hosts.push_back(*(*host));</highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*host)<sp/>=<sp/>file_downloading-&gt;using_hosts.erase((*host));</highlight></codeline>
<codeline lineno="485"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file_downloading-&gt;<ref refid="class_file_download_1a2ca59a43163f426d72206b04e213d202" kindref="member">speed_in_hosts</ref>((*host)-&gt;get_speed()<sp/>&lt;<sp/><ref refid="params_8h_1a49b72f05314ee5d1d520b417eebf41d1" kindref="member">TOP_HOSTS</ref><sp/>))</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*host)-&gt;grow_portion();</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="492"><highlight class="normal"></highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_down_msg" kindref="compound">DownMsg</ref><sp/>msg;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bzero(msg.header.name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.header.name));</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(msg.header.name,<sp/>(*file_downloading-&gt;file)-&gt;id-&gt;name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.header.name));<sp/><sp/></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.header.size.longNum<sp/>=<sp/>(*file_downloading-&gt;file)-&gt;id-&gt;size;<sp/><sp/></highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.header.time.ttime<sp/>=<sp/>(*file_downloading-&gt;file)-&gt;id-&gt;time;<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>memcpy(msg.header.owner,<sp/>(*file_downloading-&gt;file)-&gt;id-&gt;owner,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(msg.header.owner));</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>msg.header.type<sp/>=<sp/>DOWN_MSG;<sp/></highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>internval_count;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*fragment_counter<sp/>=<sp/><ref refid="p2p-actions_8hpp_1a7a9bfaef3861c921ac186d5e991bbe22" kindref="member">get_next_fragments</ref>(msg.fragments,<sp/>&amp;(*file_downloading-&gt;file)-&gt;missingBlocks,<sp/>&amp;internval_count,<sp/>(*host)-&gt;portion,<sp/>*fragment_counter);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close((*host)-&gt;sock);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*host)-&gt;connect_host_socket())</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="p2p-actions_8hpp_1a2400942dd94b34b1ba3409c4830ca292" kindref="member">send_down_message</ref>(&amp;msg,<sp/>(*host)-&gt;sock))</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*host)<sp/>=<sp/>file_downloading-&gt;using_hosts.erase((*host));</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*host)<sp/>=<sp/>file_downloading-&gt;using_hosts.erase((*host));</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="523" refid="p2p-actions_8hpp_1ae70bf79d3db0750038204fef41520545" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1ae70bf79d3db0750038204fef41520545" kindref="member">write_progress_of_download</ref>(list&lt;Resource&gt;::iterator*<sp/>file,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>break_downloading)<sp/></highlight></codeline>
<codeline lineno="524"><highlight class="normal">{</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fragments<sp/>=<sp/>(*file)-&gt;id-&gt;size/1024<sp/>;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(fragments<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>(*file)-&gt;id-&gt;size<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragments<sp/>++;</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>text;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>progress<sp/>=<sp/>((double)(fragments<sp/>-<sp/>(*file)-&gt;missingBlocks.size())/((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)fragments));</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>progress<sp/>*=<sp/>100;</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/>ostringstream<sp/>tmp;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(break_downloading)</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Downloading<sp/>file:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>string((*file)-&gt;id-&gt;name)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>break\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tmp<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;File:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>string((*file)-&gt;id-&gt;name)<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;<sp/>is<sp/>downloading.<sp/>Progress:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>progress<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;%\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/><sp/>text<sp/>=<sp/>tmp.str();</highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(text);</highlight></codeline>
<codeline lineno="542"><highlight class="normal">}</highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight></codeline>
<codeline lineno="545" refid="p2p-actions_8hpp_1a4d4ec4d6650d05f4a0e17dc2b2d182b8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a4d4ec4d6650d05f4a0e17dc2b2d182b8" kindref="member">download_action</ref>()<sp/>{</highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>downloadThread;</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;downloadThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a95307f4fda47e905140d90ccb7bd2d19" kindref="member">download_thread</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;<ref refid="p2p-actions_8hpp_1ad947d52b8870c3081e69adc0cdf5a518" kindref="member">cmdata</ref>))<sp/></highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1add88aad349701a93666701c817c05de7" kindref="member">downloadThreadFailed</ref>);</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="551"><highlight class="normal">}</highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight></codeline>
<codeline lineno="554" refid="p2p-actions_8hpp_1affba638d3f46b649f54d033ffebe6708" refkind="member"><highlight class="normal"><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/><ref refid="p2p-actions_8hpp_1affba638d3f46b649f54d033ffebe6708" kindref="member">header_from_command_data</ref>(<ref refid="struct_command_data" kindref="compound">CommandData</ref>*<sp/>data)</highlight></codeline>
<codeline lineno="555"><highlight class="normal">{</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/>result;</highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(result.name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(result.name));</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*cstr<sp/>=<sp/>data-&gt;fileName.c_str();</highlight></codeline>
<codeline lineno="562"><highlight class="normal"></highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>result.name,<sp/>cstr,<sp/>data-&gt;fileName.size());</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/>result.size.longNum<sp/>=<sp/>data-&gt;fileSize;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/>result.time.ttime<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(result.owner,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(result.owner));</highlight></codeline>
<codeline lineno="568"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>result;</highlight></codeline>
<codeline lineno="569"><highlight class="normal">}</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="572" refid="p2p-actions_8hpp_1a574d479a5acf27645c25800202c2fac9" refkind="member"><highlight class="normal"><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/><ref refid="p2p-actions_8hpp_1a574d479a5acf27645c25800202c2fac9" kindref="member">header_from_id</ref>(<ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref>*<sp/>file,<sp/><ref refid="params_8h_1a2ea0bb09adcce7f655e8f8ee8d30561b" kindref="member">MsgType</ref><sp/>type)</highlight></codeline>
<codeline lineno="573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="574"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/>header;</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/>bzero(header.name,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(header.name));</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/><sp/>header.type<sp/>=<sp/>type;</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>name_length;</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(name_length<sp/>=<sp/>0;<sp/>file-&gt;name[name_length]<sp/>!=<sp/>0<sp/>&amp;&amp;<sp/>name_length<sp/>&lt;<sp/>256;<sp/>++name_length);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>header.name,<sp/>file-&gt;name,<sp/>name_length);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/>header.size.longNum<sp/>=<sp/>file-&gt;size;</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/>header.time.ttime<sp/>=<sp/>file-&gt;time;</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>header.owner,<sp/>file-&gt;owner,<sp/>6);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>header;</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight></codeline>
<codeline lineno="588" refid="p2p-actions_8hpp_1adffeb79fb01e324c14f5820b33789c50" refkind="member"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_file_i_d_struct" kindref="compound">FileIDStruct</ref><sp/><ref refid="p2p-actions_8hpp_1adffeb79fb01e324c14f5820b33789c50" kindref="member">fileid_from_header</ref>(<ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref>*<sp/>header)</highlight></codeline>
<codeline lineno="589"><highlight class="normal">{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_file_i_d_struct" kindref="compound">FileIDStruct</ref><sp/>id;</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"></highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf_name<sp/>=<sp/>strdup(header-&gt;name);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>buf_owner<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[6];</highlight></codeline>
<codeline lineno="596"><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/>memcpy(buf_owner,<sp/>header-&gt;owner,<sp/>6);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.name<sp/>=<sp/>buf_name;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.owner<sp/>=<sp/>buf_owner;</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.size<sp/>=<sp/>header-&gt;size.longNum;</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">.time<sp/>=<sp/>header-&gt;time.ttime;</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>id;</highlight></codeline>
<codeline lineno="603"><highlight class="normal">}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="609" refid="p2p-actions_8hpp_1a95307f4fda47e905140d90ccb7bd2d19" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a95307f4fda47e905140d90ccb7bd2d19" kindref="member">download_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)<sp/></highlight></codeline>
<codeline lineno="610"><highlight class="normal">{</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Dowloading...\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/>header<sp/>=<sp/><ref refid="p2p-actions_8hpp_1affba638d3f46b649f54d033ffebe6708" kindref="member">header_from_command_data</ref>((</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="struct_command_data" kindref="compound">CommandData</ref>*)par);</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;Resource&gt;::iterator<sp/>file<sp/>=<sp/><ref refid="data_8hpp_1a1e1b6b4fca272a8a0340787753cc7341" kindref="member">getResource</ref>(&amp;header);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>is_valid<sp/>=<sp/><ref refid="data_8hpp_1a16e15afd1548a312e4890df78251debb" kindref="member">isValidResource</ref>(file);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!is_valid)</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_command_data" kindref="compound">CommandData</ref><sp/>command_data;</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_data.ids.size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_data.ids.ids<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structs_8h_1ad2196a018ba2b7686a1088e9b0feacd3" kindref="member">FileID</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_data.ids.ids[0]<sp/>=<sp/><ref refid="p2p-actions_8hpp_1adffeb79fb01e324c14f5820b33789c50" kindref="member">fileid_from_header</ref>(&amp;header);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_data.writing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a31f2b8df5ad44703613e9c316246db1e" kindref="member">find_thread</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;command_data);</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="data_8hpp_1a8327ff30bca5f48ce70c85055a771eba" kindref="member">fileIsDownloading</ref>(file))</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1ae70bf79d3db0750038204fef41520545" kindref="member">write_progress_of_download</ref>(&amp;file,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file-&gt;missingBlocks.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;File<sp/>is<sp/>already<sp/>downloaded!\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="636"><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/>file<sp/>=<sp/><ref refid="data_8hpp_1a1e1b6b4fca272a8a0340787753cc7341" kindref="member">getResource</ref>(&amp;header);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="data_8hpp_1a16e15afd1548a312e4890df78251debb" kindref="member">isValidResource</ref>(file))</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Can&apos;t<sp/>download<sp/>this<sp/>file!\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file-&gt;filePathName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file-&gt;filePathName<sp/>=<sp/><ref refid="data_8hpp_1a92b70bd6d6589844a997c437e031e5e1" kindref="member">returnFilePath</ref>(<ref refid="data_8hpp_1ad7e306ad4d8cfef5a438cc0863e169d7" kindref="member">configFilePath</ref>,<sp/>file-&gt;id-&gt;name);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file-&gt;filePathName<sp/>==<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;Resource&gt;::iterator*<sp/>param<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>list&lt;Resource&gt;::iterator;</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/>*param<sp/>=<sp/>file;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a02c06e9d9cdd58eebcb9166955e375a8" kindref="member">download_file</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>param);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="656"><highlight class="normal">}</highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight></codeline>
<codeline lineno="672" refid="p2p-actions_8hpp_1a02c06e9d9cdd58eebcb9166955e375a8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a02c06e9d9cdd58eebcb9166955e375a8" kindref="member">download_file</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)</highlight></codeline>
<codeline lineno="673"><highlight class="normal">{</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;Resource&gt;::iterator<sp/>file<sp/>=<sp/>*((list&lt;Resource&gt;::iterator*)<sp/>par);</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>(list&lt;Resource&gt;::iterator*)<sp/>par;</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>info_message<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>fragment_counter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/>header;</highlight></codeline>
<codeline lineno="679"><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_file_download" kindref="compound">FileDownload</ref><sp/>file_downloading(&amp;file);</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/><sp/>file_downloading.avaiable_hosts<sp/>=<sp/>file-&gt;peers;<sp/></highlight></codeline>
<codeline lineno="682"><highlight class="normal"></highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1a9fa5a4bf9a71ff69aaa670b097b3c2c7" kindref="member">setFileIsDownloading</ref>(file);</highlight></codeline>
<codeline lineno="684"><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_down_msg" kindref="compound">DownMsg</ref><sp/>down_msg;<sp/></highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/>header<sp/>=<sp/><ref refid="p2p-actions_8hpp_1a574d479a5acf27645c25800202c2fac9" kindref="member">header_from_id</ref>(file-&gt;id,<sp/>DOWN_MSG);</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/>down_msg.header<sp/>=<sp/>header;</highlight></codeline>
<codeline lineno="688"><highlight class="normal"></highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/>deque&lt;Host&gt;::iterator<sp/>it<sp/>=<sp/>file_downloading.avaiable_hosts.begin();</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="params_8h_1acb2e2f20f8ff6363fe6b3a60cc394c5b" kindref="member">HOST_NUMER</ref><sp/>&amp;&amp;<sp/>i<sp/>&lt;<sp/>file_downloading.avaiable_hosts.size();<sp/>++i)</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intervals_count;</highlight></codeline>
<codeline lineno="693"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_host" kindref="compound">Host</ref>*<sp/>host<sp/>=<sp/>&amp;(*it);</highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragment_counter<sp/>=<sp/><ref refid="p2p-actions_8hpp_1a7a9bfaef3861c921ac186d5e991bbe22" kindref="member">get_next_fragments</ref>(down_msg.fragments,<sp/>&amp;file-&gt;missingBlocks,<sp/>&amp;intervals_count,<sp/><ref refid="params_8h_1ae270d91a9c5dc96eb46c8b6ed4743748" kindref="member">START_FRAGMENT_COUNT</ref>,<sp/>fragment_counter);</highlight></codeline>
<codeline lineno="695"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>host-&gt;asked_fragment<sp/>+=<sp/><ref refid="params_8h_1ae270d91a9c5dc96eb46c8b6ed4743748" kindref="member">START_FRAGMENT_COUNT</ref>;<sp/></highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!host-&gt;<ref refid="class_host_1a8acce84ed598511c05bc950493ee858b" kindref="member">connect_host_socket</ref>())</highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="698"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="699"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>file_downloading.avaiable_hosts.erase(it);</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="p2p-actions_8hpp_1a2400942dd94b34b1ba3409c4830ca292" kindref="member">send_down_message</ref>(&amp;down_msg,<sp/>host-&gt;sock))</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>--i;</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>file_downloading.avaiable_hosts.erase(it);</highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading.using_hosts.push_back(*host);</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>file_downloading.avaiable_hosts.erase(it);</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"><sp/><sp/><sp/><sp/>fd_set<sp/>descriptors;</highlight></codeline>
<codeline lineno="714"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>timeout;</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><sp/>timeout.tv_sec<sp/>=<sp/><ref refid="params_8h_1a52bb08da926e5d4ae68bf2c2064d14ff" kindref="member">TIMEOUT_SEC</ref>;</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><sp/>timeout.tv_usec<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>recive_any_fragment<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="719"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file_downloading.using_hosts.size()<sp/>&lt;<sp/><ref refid="params_8h_1acb2e2f20f8ff6363fe6b3a60cc394c5b" kindref="member">HOST_NUMER</ref>)</highlight></codeline>
<codeline lineno="721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_command_data" kindref="compound">CommandData</ref><sp/>command_data;</highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_data.ids.size<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_data.ids.ids<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref>[1];</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_data.ids.ids[0]<sp/>=<sp/><ref refid="p2p-actions_8hpp_1adffeb79fb01e324c14f5820b33789c50" kindref="member">fileid_from_header</ref>(&amp;header);</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>command_data.writing<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(file_downloading.using_hosts.size()<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>file_downloading.avaiable_hosts.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a31f2b8df5ad44703613e9c316246db1e" kindref="member">find_thread</ref>((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;command_data);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading.avaiable_hosts<sp/>=<sp/>file-&gt;peers;</highlight></codeline>
<codeline lineno="732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file_downloading.avaiable_hosts.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sleep(<ref refid="params_8h_1a88e62f2cab00c86b2412f4e6c83a0e97" kindref="member">TIMEOUT_SEC_FIND_AGAIN</ref>);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(file_downloading.using_hosts.size()<sp/>&lt;<sp/><ref refid="params_8h_1acb2e2f20f8ff6363fe6b3a60cc394c5b" kindref="member">HOST_NUMER</ref><sp/>&amp;&amp;<sp/>file_downloading.avaiable_hosts.size()<sp/>&gt;<sp/>0)</highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>deque&lt;Host&gt;::iterator<sp/>iterator<sp/>=<sp/>file_downloading.avaiable_hosts.begin();</highlight></codeline>
<codeline lineno="738"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_host" kindref="compound">Host</ref>*<sp/>tmp<sp/>=<sp/>&amp;(*iterator);</highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(tmp-&gt;<ref refid="class_host_1a8acce84ed598511c05bc950493ee858b" kindref="member">connect_host_socket</ref>())</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="744"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>intervals_count;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fragment_counter<sp/>=<sp/><ref refid="p2p-actions_8hpp_1a7a9bfaef3861c921ac186d5e991bbe22" kindref="member">get_next_fragments</ref>(down_msg.fragments,<sp/>&amp;file-&gt;missingBlocks,<sp/>&amp;intervals_count,<sp/><ref refid="params_8h_1ae270d91a9c5dc96eb46c8b6ed4743748" kindref="member">START_FRAGMENT_COUNT</ref>,<sp/>fragment_counter);</highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="p2p-actions_8hpp_1a2400942dd94b34b1ba3409c4830ca292" kindref="member">send_down_message</ref>(&amp;down_msg,<sp/>tmp-&gt;sock))</highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading.using_hosts.push_back(*iterator);</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading.avaiable_hosts.erase(iterator);</highlight></codeline>
<codeline lineno="751"><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="757"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading.avaiable_hosts.erase(iterator);</highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_ZERO(&amp;descriptors);</highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>file_downloading.using_hosts.begin();</highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/>file_downloading.using_hosts.end())</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>FD_SET(it-&gt;sock,<sp/>&amp;descriptors);</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="768"><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!<ref refid="data_8hpp_1a16e15afd1548a312e4890df78251debb" kindref="member">isValidResource</ref>(<ref refid="data_8hpp_1a1e1b6b4fca272a8a0340787753cc7341" kindref="member">getResource</ref>(&amp;header)))</highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1ae70bf79d3db0750038204fef41520545" kindref="member">write_progress_of_download</ref>(&amp;file,<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="774"><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"></highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(select(65536,<sp/>&amp;descriptors,<sp/>(fd_set<sp/>*)<sp/>NULL,<sp/>(fd_set<sp/>*)<sp/>NULL,<sp/>&amp;timeout)<sp/>&lt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1aaee5fea624effb5c8b9eaa789c173af9" kindref="member">close_hosts_sockets</ref>(&amp;file_downloading.using_hosts);</highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading.using_hosts.clear();</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading.avaiable_hosts.clear();</highlight></codeline>
<codeline lineno="781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="783"><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recive_any_fragment<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>it<sp/>=<sp/>file_downloading.using_hosts.begin();</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/>file_downloading.using_hosts.end())</highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(FD_ISSET(it-&gt;sock,<sp/>&amp;descriptors))</highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="790"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="p2p-actions_8hpp_1ad7bf772208926a302dbc6fdc69b1dfc0" kindref="member">recive_fragment</ref>(&amp;it,<sp/>&amp;file_downloading,<sp/>&amp;fragment_counter))</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>recive_any_fragment<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it<sp/>!=<sp/>file_downloading.using_hosts.end())</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="799"><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>percent<sp/>=<sp/>((double)(file_downloading.fragments<sp/>-<sp/>file-&gt;missingBlocks.size())/((</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)file_downloading.fragments));</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>percent<sp/>*=<sp/>100;</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(info_message<sp/>+<sp/>1<sp/>&lt;=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)percent/10)</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>info_message<sp/>=<sp/>(int)percent/10;</highlight></codeline>
<codeline lineno="807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1ae70bf79d3db0750038204fef41520545" kindref="member">write_progress_of_download</ref>(&amp;file,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(file-&gt;missingBlocks.size()<sp/>==<sp/>0)</highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1ae70bf79d3db0750038204fef41520545" kindref="member">write_progress_of_download</ref>(&amp;file,<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Downloading<sp/>file<sp/>ends!<sp/>File<sp/>path<sp/>-<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(file-&gt;filePathName)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1aaee5fea624effb5c8b9eaa789c173af9" kindref="member">close_hosts_sockets</ref>(&amp;file_downloading.using_hosts);</highlight></codeline>
<codeline lineno="816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="818"><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!recive_any_fragment)</highlight></codeline>
<codeline lineno="820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1aaee5fea624effb5c8b9eaa789c173af9" kindref="member">close_hosts_sockets</ref>(&amp;file_downloading.using_hosts);</highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading.using_hosts.clear();</highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file_downloading.avaiable_hosts.clear();</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="826"><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="831" refid="p2p-actions_8hpp_1aaee5fea624effb5c8b9eaa789c173af9" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1aaee5fea624effb5c8b9eaa789c173af9" kindref="member">close_hosts_sockets</ref>(deque&lt;Host&gt;<sp/>*collection)</highlight></codeline>
<codeline lineno="832"><highlight class="normal">{</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/><sp/>deque&lt;Host&gt;::iterator<sp/>it<sp/>=<sp/>collection-&gt;begin();</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(it<sp/>!=<sp/>collection-&gt;end())</highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(it-&gt;sock);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++it;</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="839"><highlight class="normal">}</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="843" refid="p2p-actions_8hpp_1aa4d004393a1ee3d47f4b077fbbbd6d1e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1aa4d004393a1ee3d47f4b077fbbbd6d1e" kindref="member">receiver_thread_UDP</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)<sp/></highlight></codeline>
<codeline lineno="844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock;</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/>socklen_t<sp/>length;</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>server;</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>clientaddr;</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>msgsock;</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/>header;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/>sock<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP<sp/>);</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock<sp/>==<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Opening<sp/>stream<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/>setsockopt(sock,<sp/>SOL_SOCKET,<sp/>SO_REUSEADDR,<sp/>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*)&amp;optval<sp/>,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="859"><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_family=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_addr.s_addr<sp/>=<sp/>htonl(INADDR_ANY);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_port<sp/>=<sp/>htons(<ref refid="params_8h_1a11717c934f77ad5167dac5d28562d85a" kindref="member">PORT</ref>);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"></highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(sock,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;server,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(server))<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Binding<sp/>stream<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(1);</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="869"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(clientaddr);</highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>recvfrom(sock,<sp/>&amp;header,<sp/><ref refid="structs_8h_1a6f424412717ce27b4f5a521b75251382" kindref="member">MIN_MSG_SIZE</ref>,<sp/>0,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;clientaddr,<sp/><sp/>&amp;length);</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>in<sp/>recvfrom&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="879"><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>*netMsg<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref>(&amp;header,<sp/>&amp;clientaddr,<sp/>&amp;length);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(header.type)</highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_t<sp/>newThread;</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>UP_MSG:</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;newThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1ac59d846ee6ddec953a5afbd75c973ece" kindref="member">up_msg_reaction</ref>,<sp/>netMsg))<sp/></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" kindref="member">receiverFailed</ref>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>HAS_MSG:</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;newThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a221f1f68fc1576746fef07bc0b620217" kindref="member">has_msg_reaction</ref>,<sp/>netMsg))<sp/></highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" kindref="member">receiverFailed</ref>);</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DEL_MSG:</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;newThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1af75026c0f1826128fd1fece887e8f350" kindref="member">del_msg_reaction</ref>,<sp/>netMsg))<sp/></highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" kindref="member">receiverFailed</ref>);</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FORCE_DEL_MSG:</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>DONT_MSG:</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;newThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a65f0119ca71f68088a44ceda9f4e58ef" kindref="member">force_del_msg_reaction</ref>,<sp/>netMsg))<sp/></highlight></codeline>
<codeline lineno="905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" kindref="member">receiverFailed</ref>);</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>FIND_MSG:</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;newThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a697d21a3e3ff4e102ca680bab0c7baca" kindref="member">find_msg_reaction</ref>,<sp/>netMsg))<sp/></highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" kindref="member">receiverFailed</ref>);</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>OWN_MSG:</highlight></codeline>
<codeline lineno="916"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;newThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a2e9bd3fb9982491e864396e5de65b3b8" kindref="member">own_msg_reaction</ref>,<sp/>netMsg))<sp/></highlight></codeline>
<codeline lineno="917"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1aa4dec26d5c73404e97c0cb97b8b25b23" kindref="member">receiverFailed</ref>);</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;<sp/><sp/></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="924"><highlight class="normal"></highlight></codeline>
<codeline lineno="925"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="927"><highlight class="normal">}</highlight></codeline>
<codeline lineno="928"><highlight class="normal"></highlight></codeline>
<codeline lineno="932" refid="p2p-actions_8hpp_1abcc87808a48c4da216aedbbcd5e1bf1e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1abcc87808a48c4da216aedbbcd5e1bf1e" kindref="member">send_broadcast</ref>(<ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref><sp/>*header)</highlight></codeline>
<codeline lineno="933"><highlight class="normal">{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock;</highlight></codeline>
<codeline lineno="935"><highlight class="normal"></highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/>sock<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP<sp/>);</highlight></codeline>
<codeline lineno="937"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;opening<sp/>stream<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flag<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/>setsockopt(sock,<sp/>SOL_SOCKET,<sp/>SO_BROADCAST,<sp/>&amp;flag,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(flag));</highlight></codeline>
<codeline lineno="943"><highlight class="normal"></highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>Target_addr;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;Target_addr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Target_addr));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/>Target_addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/>Target_addr.sin_port<sp/>=<sp/>htons(<ref refid="params_8h_1a11717c934f77ad5167dac5d28562d85a" kindref="member">PORT</ref>);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/>Target_addr.sin_addr.s_addr<sp/>=<sp/>inet_addr(</highlight><highlight class="stringliteral">&quot;255.255.255.255&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>Local_addr;</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;Local_addr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Local_addr));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/><sp/>Local_addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="953"><highlight class="normal"><sp/><sp/><sp/><sp/>Local_addr.sin_port<sp/>=<sp/>htons(0);</highlight></codeline>
<codeline lineno="954"><highlight class="normal"><sp/><sp/><sp/><sp/>Local_addr.sin_addr.s_addr<sp/>=<sp/>htonl(INADDR_ANY);</highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(sock,<sp/>(sockaddr*)&amp;Local_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Local_addr))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Bind<sp/>call<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="962"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendto(sock,<sp/>header,<sp/><ref refid="structs_8h_1a6f424412717ce27b4f5a521b75251382" kindref="member">MIN_MSG_SIZE</ref>,<sp/>0,<sp/></highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sockaddr<sp/>*)&amp;Target_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Target_addr))<sp/>&lt;<sp/>0)<sp/></highlight></codeline>
<codeline lineno="964"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Send<sp/>call<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="969"><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="971"><highlight class="normal">}</highlight></codeline>
<codeline lineno="972"><highlight class="normal"></highlight></codeline>
<codeline lineno="976" refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(<ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>*data,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>port)</highlight></codeline>
<codeline lineno="977"><highlight class="normal">{</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock;</highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"><sp/><sp/><sp/><sp/>sock<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP<sp/>);</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock<sp/>==<sp/>-1)<sp/>{</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;opening<sp/>stream<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in*<sp/>Target_addr;<sp/></highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/>Target_addr<sp/>=<sp/>data-&gt;sender;</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/>Target_addr-&gt;sin_port<sp/>=<sp/>htons(port);</highlight></codeline>
<codeline lineno="989"><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>Local_addr;</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(&amp;Local_addr,<sp/>0,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Local_addr));<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="992"><highlight class="normal"><sp/><sp/><sp/><sp/>Local_addr.sin_family<sp/>=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="993"><highlight class="normal"><sp/><sp/><sp/><sp/>Local_addr.sin_port<sp/>=<sp/>htons(0);</highlight></codeline>
<codeline lineno="994"><highlight class="normal"><sp/><sp/><sp/><sp/>Local_addr.sin_addr.s_addr<sp/>=<sp/>htonl(INADDR_ANY);</highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(sock,<sp/>(sockaddr*)&amp;Local_addr,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(Local_addr))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Bind<sp/>call<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>exit(0);</highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight></codeline>
<codeline lineno="1002"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sendto(sock,<sp/>&amp;(data-&gt;header),<sp/><ref refid="structs_8h_1a6f424412717ce27b4f5a521b75251382" kindref="member">MIN_MSG_SIZE</ref>,<sp/>0,<sp/></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(sockaddr<sp/>*)Target_addr,<sp/>*(data-&gt;addres_length))<sp/>&lt;<sp/>0)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Send<sp/>call<sp/>error&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"></highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="1011"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight></codeline>
<codeline lineno="1014" refid="p2p-actions_8hpp_1a24b786fe1ab7191fc9e2b8b3466c8bb4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a24b786fe1ab7191fc9e2b8b3466c8bb4" kindref="member">find_action</ref>()<sp/>{</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>findThread;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;findThread,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a31f2b8df5ad44703613e9c316246db1e" kindref="member">find_thread</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)&amp;<ref refid="p2p-actions_8hpp_1ad947d52b8870c3081e69adc0cdf5a518" kindref="member">cmdata</ref>))</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1a1fe55dfbf09256d5ecccba3673a29a5c" kindref="member">threadFailed</ref>);</highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"></highlight></codeline>
<codeline lineno="1027" refid="p2p-actions_8hpp_1a31f2b8df5ad44703613e9c316246db1e" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a31f2b8df5ad44703613e9c316246db1e" kindref="member">find_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)<sp/>{</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref><sp/>parT<sp/>=<sp/>*((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref>*)par);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>sock;</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>n;</highlight></codeline>
<codeline lineno="1031"><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>server;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">sockaddr_in<sp/>clientaddr;</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/>socklen_t<sp/>length;</highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/><sp/>length<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(clientaddr);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_resource_header" kindref="compound">ResourceHeader</ref>*<sp/>header<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="structs_8h_1a50e428119ab866f85978e54a971fe137" kindref="member">ResourceHeader</ref>();</highlight></codeline>
<codeline lineno="1037"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;Resource&gt;::iterator<sp/>resourceIt;</highlight></codeline>
<codeline lineno="1038"><highlight class="normal"><sp/><sp/><sp/><sp/>set&lt;FileID*&gt;<sp/>found;</highlight></codeline>
<codeline lineno="1039"><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/>sock<sp/>=<sp/>socket(AF_INET,<sp/>SOCK_DGRAM,<sp/>IPPROTO_UDP<sp/>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(sock<sp/>==<sp/>-1)<sp/></highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parT.writing)</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Opening<sp/>stream<sp/>socket&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Unsuccessful<sp/>find<sp/>operation.<sp/>Network<sp/>problem\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1049"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">timeval<sp/>tv;</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><sp/>tv.tv_sec<sp/>=<sp/>1;<sp/><sp/></highlight><highlight class="comment">/*<sp/>1-sekundowy<sp/>timeout*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/><sp/>tv.tv_usec<sp/>=<sp/>0;<sp/></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"><sp/><sp/><sp/><sp/>setsockopt(sock,<sp/>SOL_SOCKET,<sp/>SO_RCVTIMEO,(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval<sp/>*)&amp;tv,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>timeval));</highlight></codeline>
<codeline lineno="1056"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>optval<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><sp/><sp/><sp/><sp/>setsockopt(sock,<sp/>SOL_SOCKET,<sp/>SO_REUSEPORT,&amp;optval,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(optval));</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_family=<sp/>AF_INET;</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_addr.s_addr<sp/>=<sp/>htonl(INADDR_ANY);</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"><sp/><sp/><sp/><sp/>server.sin_port<sp/>=<sp/>htons(FIND_PORT);</highlight></codeline>
<codeline lineno="1062"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bind(sock,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;server,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal"><sp/>server)<sp/>==<sp/>-1)</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parT.writing)</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;Binding<sp/>stream<sp/>socket\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Unsuccessful<sp/>find<sp/>operation.<sp/>Network<sp/>problem\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight></codeline>
<codeline lineno="1073"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parT.writing)</highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Searching...\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"></highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><sp/>pthread_t<sp/>find_msg_sender;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;find_msg_sender,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1ab9192463ba13611e37fa2963c7a243f5" kindref="member">find_msg_sender_thread</ref>,<sp/>&amp;parT))<sp/></highlight><highlight class="comment">//<sp/>błąd<sp/>przy<sp/>tworzeniu<sp/>wątku</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1078"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1079"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parT.writing)<sp/></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1a1fe55dfbf09256d5ecccba3673a29a5c" kindref="member">threadFailed</ref>);</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/><sp/>time_t<sp/>now<sp/>=<sp/>time(0);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal">(time(0)<sp/>-<sp/>now<sp/>&lt;<sp/><ref refid="params_8h_1a1e32f61f5ac8d270bad6b3303b873295" kindref="member">TIMEOUT_FIND</ref>)</highlight></codeline>
<codeline lineno="1087"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1088"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n<sp/>=<sp/>recvfrom(sock,<sp/>header,<sp/><ref refid="structs_8h_1a6f424412717ce27b4f5a521b75251382" kindref="member">MIN_MSG_SIZE</ref>,<sp/>0,<sp/>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>sockaddr<sp/>*)<sp/>&amp;clientaddr,<sp/><sp/>&amp;length);</highlight></codeline>
<codeline lineno="1089"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(errno<sp/>==<sp/>EAGAIN<sp/>||<sp/>errno<sp/>==<sp/>EWOULDBLOCK)<sp/></highlight><highlight class="comment">//timeout</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1091"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>errno<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1094"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(n<sp/>!=<sp/><ref refid="structs_8h_1a6f424412717ce27b4f5a521b75251382" kindref="member">MIN_MSG_SIZE</ref>)</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1096"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parT.writing)</highlight></codeline>
<codeline lineno="1097"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perror(</highlight><highlight class="stringliteral">&quot;ERROR<sp/>in<sp/>recvfrom&quot;</highlight><highlight class="normal">);<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="1099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(header-&gt;type<sp/>!=<sp/>HAS_MSG)<sp/></highlight><highlight class="comment">//zly<sp/>komunikat</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1104"><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//ktos<sp/>przyslal<sp/>informacje<sp/>o<sp/>zasobie,<sp/>ktorego<sp/>bylismy<sp/>wlascicielami<sp/>(usunelismy<sp/>zasob)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(header-&gt;owner)<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/><ref refid="data_8hpp_1af41ac35f7bec745690a4038c692e23d3" kindref="member">isFileInStorage</ref>(header)==NULL)</highlight></codeline>
<codeline lineno="1107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>netMsg(header,&amp;clientaddr,<sp/>&amp;length);</highlight></codeline>
<codeline lineno="1109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.header.type<sp/>=<sp/>FORCE_DEL_MSG;</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(&amp;netMsg);</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>resourceIt<sp/>=<sp/><ref refid="data_8hpp_1a2e45c183b7abaaffcfba8fb45595484b" kindref="member">openResource</ref>(header);<sp/><sp/></highlight><highlight class="comment">//stworzenie<sp/>lub<sp/>zwrocenie<sp/>struktury<sp/>zasobu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>isUnique<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//sprawdzenie,<sp/>czy<sp/>nie<sp/>mamy<sp/>juz<sp/>zapisanego<sp/>adresu<sp/>wezla,<sp/>ktory<sp/>przyslal<sp/>nam<sp/>informacje<sp/>o<sp/>zasobie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i=0;<sp/>i&lt;(*resourceIt).peers.size();<sp/>i++)<sp/></highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((*resourceIt).peers[i].addr.sin_addr.s_addr<sp/>==<sp/>clientaddr.sin_addr.s_addr)</highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>isUnique<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(isUnique)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//zapisanie<sp/>adresu<sp/>wezla<sp/>do<sp/>listy<sp/>peerow<sp/>danego<sp/>zasobu</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(*resourceIt).peers.push_back(<ref refid="class_host" kindref="compound">Host</ref>(&amp;clientaddr,&amp;length));</highlight></codeline>
<codeline lineno="1127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>headerOwner<sp/>=<sp/><ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(header-&gt;owner);</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>resourceOwner<sp/>=<sp/><ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>((*resourceIt).id-&gt;owner);</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>found.insert((*resourceIt).id);</highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(headerOwner<sp/>!=<sp/>resourceOwner)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//roziwazywanie<sp/>konfliktow<sp/>wlascicieli</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>netMsg(header,<sp/>&amp;clientaddr,<sp/>&amp;length);</highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((header-&gt;time.ttime)<sp/>&gt;<sp/>((*resourceIt).id-&gt;time))</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.header.type<sp/>=<sp/>HAS_MSG;</highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.<ref refid="class_net_msg_1a7a33b55595a5cf9b8ad2118d393bbd7b" kindref="member">setFileId</ref>((*resourceIt).id);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(&amp;netMsg);</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">((header-&gt;time.ttime)<sp/>&lt;<sp/>((*resourceIt).id-&gt;time))</highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1ad6b4f2daae819d8fcf5a5bb22b5b7c61" kindref="member">changeOwner</ref>((*resourceIt).id,header-&gt;owner,header-&gt;time.ttime);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.header.type<sp/>=<sp/>HAS_MSG;</highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="class_host" kindref="compound">Host</ref><sp/>h<sp/>:<sp/>(*resourceIt).peers)</highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.<ref refid="class_net_msg_1aa286e9f47f65942cb900b16b48fdcbcd" kindref="member">setReceiver</ref>(h);</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(&amp;netMsg);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.header.type<sp/>=<sp/>FORCE_DEL_MSG;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="class_host" kindref="compound">Host</ref><sp/>h<sp/>:<sp/>(*resourceIt).peers)</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.<ref refid="class_net_msg_1aa286e9f47f65942cb900b16b48fdcbcd" kindref="member">setReceiver</ref>(h);</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(&amp;netMsg);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parT.writing)</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;OWNERS<sp/>CONFLICT.<sp/>RESOURCE<sp/>DELETED!\n&gt;&gt;Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">((*resourceIt).id-&gt;name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Owner:&quot;</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>to_string(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>((*resourceIt).id-&gt;owner))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Size:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string((*resourceIt).id-&gt;size)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1ad319bb1cb29b05901905d84f8c56f7ff" kindref="member">deleteFile</ref>((*resourceIt).id);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parT.find_one<sp/>||<sp/>(parT.find_first<sp/>&amp;&amp;<sp/>found.size()<sp/>==<sp/>parT.find_first_count))<sp/></highlight><highlight class="comment">//warunki<sp/>konca<sp/>-<sp/>znalezlismy<sp/>wymagana<sp/>ilosc<sp/>zasobow</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><sp/>close(sock);</highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(parT.writing)</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(found.empty())</highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;No<sp/>results!\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//wypisanie<sp/>wynikow<sp/>wyszukiwania</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Results:\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref><sp/>*fid<sp/>:<sp/>found)<sp/>{</highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(fid-&gt;name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>size:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(fid-&gt;size)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1184"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1185"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight></codeline>
<codeline lineno="1190" refid="p2p-actions_8hpp_1ab9192463ba13611e37fa2963c7a243f5" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1ab9192463ba13611e37fa2963c7a243f5" kindref="member">find_msg_sender_thread</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*par)</highlight></codeline>
<codeline lineno="1191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref><sp/>parT;</highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><sp/>parT.ids<sp/>=<sp/>((</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_command_data" kindref="compound">CommandData</ref>*)par)-&gt;ids;</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>parT.ids.size;<sp/>++i)<sp/>{</highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>netMsg;</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.<ref refid="class_net_msg_1a7a33b55595a5cf9b8ad2118d393bbd7b" kindref="member">setFileId</ref>(&amp;parT.ids.ids[i]);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.header.type<sp/>=<sp/>FIND_MSG;</highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1abcc87808a48c4da216aedbbcd5e1bf1e" kindref="member">send_broadcast</ref>(&amp;(netMsg.header));</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1200"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight></codeline>
<codeline lineno="1202"><highlight class="normal"></highlight></codeline>
<codeline lineno="1208" refid="p2p-actions_8hpp_1ac59d846ee6ddec953a5afbd75c973ece" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1ac59d846ee6ddec953a5afbd75c973ece" kindref="member">up_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)</highlight></codeline>
<codeline lineno="1209"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>*netMsg<sp/>=<sp/>(<ref refid="class_net_msg" kindref="compound">NetMsg</ref>*)<sp/>par;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref><sp/>*myFid;</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"><sp/><sp/><sp/><sp/>myFid<sp/>=<sp/><ref refid="data_8hpp_1af41ac35f7bec745690a4038c692e23d3" kindref="member">isFileInStorage</ref>(&amp;(netMsg-&gt;header));</highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myFid!=NULL)</highlight><highlight class="comment">//<sp/>MAMY<sp/>TEN<sp/>ZASOB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg-&gt;<ref refid="class_net_msg_1a7a33b55595a5cf9b8ad2118d393bbd7b" kindref="member">setFileId</ref>(myFid);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg-&gt;header.type<sp/>=<sp/>HAS_MSG;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(netMsg);</highlight></codeline>
<codeline lineno="1218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>netMsg;</highlight></codeline>
<codeline lineno="1220"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="p2p-actions_8hpp_1a221f1f68fc1576746fef07bc0b620217" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a221f1f68fc1576746fef07bc0b620217" kindref="member">has_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)</highlight></codeline>
<codeline lineno="1230"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>*netMsg<sp/>=<sp/>(<ref refid="class_net_msg" kindref="compound">NetMsg</ref>*)<sp/>par;</highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref><sp/>*myFid;</highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/><sp/>myFid<sp/>=<sp/><ref refid="data_8hpp_1af41ac35f7bec745690a4038c692e23d3" kindref="member">isFileInStorage</ref>(&amp;(netMsg-&gt;header));</highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myFid!=NULL)<sp/></highlight><highlight class="comment">//<sp/>MAMY<sp/>TEN<sp/>ZASOB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>myOwner<sp/>=<sp/><ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(myFid-&gt;owner);</highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>recOwner<sp/>=<sp/><ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(netMsg-&gt;header.owner);</highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myOwner<sp/>!=<sp/>recOwner)</highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(netMsg-&gt;header.time.ttime<sp/>&lt;<sp/>myFid-&gt;time)</highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1ad6b4f2daae819d8fcf5a5bb22b5b7c61" kindref="member">changeOwner</ref>(myFid,netMsg-&gt;header.owner,<sp/>netMsg-&gt;header.time.ttime);</highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myOwner<sp/>==<sp/><ref refid="data_8hpp_1a2f7a6c53de0e389a922c7613b641d83a" kindref="member">get_id</ref>())<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//to<sp/>byl<sp/>nasz<sp/>zasob<sp/>-<sp/>wywlaszczenie</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Your<sp/>resource<sp/>(&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(myFid-&gt;name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(myFid-&gt;size)<sp/><sp/>+<sp/></highlight><highlight class="stringliteral">&quot;b)confiscated!<sp/>You<sp/>were<sp/>parasitic<sp/>owner!\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(netMsg-&gt;header.time.ttime<sp/>==<sp/>myFid-&gt;time)</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;A<sp/>conflict<sp/>of<sp/>adding<sp/>the<sp/>same<sp/>resource<sp/>by<sp/>different<sp/>users.<sp/>Resource<sp/>deleted\n&gt;&gt;<sp/>&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg-&gt;header.type<sp/>=<sp/>FORCE_DEL_MSG;</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(netMsg);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1ad319bb1cb29b05901905d84f8c56f7ff" kindref="member">deleteFile</ref>(myFid);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>netMsg;</highlight></codeline>
<codeline lineno="1258"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1268" refid="p2p-actions_8hpp_1af75026c0f1826128fd1fece887e8f350" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1af75026c0f1826128fd1fece887e8f350" kindref="member">del_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>*netMsg<sp/>=<sp/>(<ref refid="class_net_msg" kindref="compound">NetMsg</ref>*)<sp/>par;</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref><sp/>*myFid;</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/><sp/>myFid<sp/>=<sp/><ref refid="data_8hpp_1af41ac35f7bec745690a4038c692e23d3" kindref="member">isFileInStorage</ref>(&amp;(netMsg-&gt;header));</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myFid!=NULL)<sp/></highlight><highlight class="comment">//<sp/>MAMY<sp/>TEN<sp/>ZASOB</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>myOwner<sp/>=<sp/><ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(myFid-&gt;owner);</highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/>recOwner<sp/>=<sp/><ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(netMsg-&gt;header.owner);</highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myOwner<sp/>==<sp/>recOwner)</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;RESOURCE<sp/>DELETED!\n&gt;&gt;Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(myFid-&gt;name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Owner:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(myFid-&gt;owner))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Size:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(myFid-&gt;size)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1ad319bb1cb29b05901905d84f8c56f7ff" kindref="member">deleteFile</ref>(myFid);</highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(netMsg-&gt;header.time.ttime<sp/>&lt;<sp/>myFid-&gt;time)</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;RESOURCE<sp/>DELETED!\n&gt;&gt;Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(myFid-&gt;name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Owner:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(myFid-&gt;owner))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Size:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(myFid-&gt;size)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1ad319bb1cb29b05901905d84f8c56f7ff" kindref="member">deleteFile</ref>(myFid);</highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>netMsg;</highlight></codeline>
<codeline lineno="1289"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295" refid="p2p-actions_8hpp_1a65f0119ca71f68088a44ceda9f4e58ef" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a65f0119ca71f68088a44ceda9f4e58ef" kindref="member">force_del_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)</highlight></codeline>
<codeline lineno="1296"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>*netMsg<sp/>=<sp/>(<ref refid="class_net_msg" kindref="compound">NetMsg</ref>*)<sp/>par;</highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref><sp/>*myFid;</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/>myFid<sp/>=<sp/><ref refid="data_8hpp_1af41ac35f7bec745690a4038c692e23d3" kindref="member">isFileInStorage</ref>(&amp;(netMsg-&gt;header));</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myFid!=NULL)<sp/></highlight><highlight class="comment">//<sp/>mamy<sp/>ten<sp/>zasob</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1301"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;RESOURCE<sp/>DELETED!\n&gt;&gt;Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(myFid-&gt;name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Owner:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(myFid-&gt;owner))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Size:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(myFid-&gt;size)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&gt;&gt;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1ad319bb1cb29b05901905d84f8c56f7ff" kindref="member">deleteFile</ref>(myFid);</highlight></codeline>
<codeline lineno="1304"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>netMsg;</highlight></codeline>
<codeline lineno="1306"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1307"><highlight class="normal"></highlight></codeline>
<codeline lineno="1315" refid="p2p-actions_8hpp_1a697d21a3e3ff4e102ca680bab0c7baca" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a697d21a3e3ff4e102ca680bab0c7baca" kindref="member">find_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)</highlight></codeline>
<codeline lineno="1316"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>*netMsg<sp/>=<sp/>(<ref refid="class_net_msg" kindref="compound">NetMsg</ref>*)<sp/>par;</highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><sp/>vector&lt;FileID*&gt;<sp/>myFids;</highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/><sp/>myFids<sp/>=<sp/><ref refid="data_8hpp_1a9c5ef7840fcccd527006388d6dd3a732" kindref="member">myFindInStorage</ref>(&amp;(netMsg-&gt;header));</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref>*<sp/>fid<sp/>:<sp/>myFids)</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg-&gt;<ref refid="class_net_msg_1a7a33b55595a5cf9b8ad2118d393bbd7b" kindref="member">setFileId</ref>(fid);</highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg-&gt;header.type<sp/>=<sp/>HAS_MSG;</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(netMsg,<sp/>FIND_PORT);</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>netMsg;</highlight></codeline>
<codeline lineno="1327"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1328"><highlight class="normal"></highlight></codeline>
<codeline lineno="1335" refid="p2p-actions_8hpp_1a2e9bd3fb9982491e864396e5de65b3b8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="p2p-actions_8hpp_1a2e9bd3fb9982491e864396e5de65b3b8" kindref="member">own_msg_reaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>par)</highlight></codeline>
<codeline lineno="1336"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>*netMsg<sp/>=<sp/>(<ref refid="class_net_msg" kindref="compound">NetMsg</ref>*)<sp/>par;</highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref><sp/>*myFid;</highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/><sp/>uint64_t<sp/>owner<sp/>=<sp/><ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(netMsg-&gt;header.owner);</highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><sp/>myFid<sp/>=<sp/><ref refid="data_8hpp_1af41ac35f7bec745690a4038c692e23d3" kindref="member">isFileInStorage</ref>(&amp;(netMsg-&gt;header));</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(myFid==NULL<sp/>&amp;&amp;<sp/>owner==</highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)<sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>NIE<sp/>MAMY<sp/>ZASOBU,<sp/>A<sp/>BYLISMY<sp/>WLASCICIELAMI</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg-&gt;header.type<sp/>=<sp/>DONT_MSG;</highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a2394b9d513a272b51997b85cfd6e8da0" kindref="member">send_response</ref>(netMsg);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>netMsg;</highlight></codeline>
<codeline lineno="1347"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357" refid="p2p-actions_8hpp_1abb59e02c4b2ff6de53498f2e3e710dc4" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1abb59e02c4b2ff6de53498f2e3e710dc4" kindref="member">check_files_validations</ref>()</highlight></codeline>
<codeline lineno="1358"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/><sp/>list&lt;FileID*&gt;<sp/>fileList<sp/>=<sp/><ref refid="data_8hpp_1aa012024561c41d22fcccb80d2803ff89" kindref="member">getFileIds</ref>();</highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="class_net_msg" kindref="compound">NetMsg</ref><sp/>netMsg;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/><sp/>netMsg.header.type<sp/>=<sp/>OWN_MSG;</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fileList.empty())</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;&gt;&gt;Resources<sp/>in<sp/>storage:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref>*<sp/>fid<sp/>:<sp/>fileList)</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(fid-&gt;name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Owner:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(fid-&gt;owner))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Size:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(fid-&gt;size)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(fid-&gt;owner)<sp/>!=<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.<ref refid="class_net_msg_1a7a33b55595a5cf9b8ad2118d393bbd7b" kindref="member">setFileId</ref>(fid);</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1abcc87808a48c4da216aedbbcd5e1bf1e" kindref="member">send_broadcast</ref>(&amp;(netMsg.header));</highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/><sp/>fileList<sp/>=<sp/><ref refid="data_8hpp_1a89895ee5bc432ebf982721021ee5ed5e" kindref="member">getUnlinked</ref>();</highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/><sp/>netMsg.header.type<sp/>=<sp/>DEL_MSG;</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!fileList.empty())</highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;&gt;&gt;Resources<sp/>with<sp/>invalid<sp/>path,<sp/>deleted:\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<ref refid="struct_file_i_d_struct" kindref="compound">FileID</ref>*<sp/>fid<sp/>:<sp/>fileList)</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(</highlight><highlight class="stringliteral">&quot;Name:<sp/>&quot;</highlight><highlight class="normal"><sp/>+<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">(fid-&gt;name)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Owner:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(fid-&gt;owner))<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;;<sp/>Size:&quot;</highlight><highlight class="normal"><sp/>+<sp/>to_string(fid-&gt;size)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="data_8hpp_1aab3f7e723c2b26f5a0eee43b3cab4c1d" kindref="member">bytesToLong</ref>(fid-&gt;owner)<sp/>==<sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>netMsg.<ref refid="class_net_msg_1a7a33b55595a5cf9b8ad2118d393bbd7b" kindref="member">setFileId</ref>(fid);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1abcc87808a48c4da216aedbbcd5e1bf1e" kindref="member">send_broadcast</ref>(&amp;(netMsg.header));</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)fid-&gt;name);</highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)fid-&gt;owner);</highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>fid;<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="1392"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="1393"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight></codeline>
<codeline lineno="1396" refid="p2p-actions_8hpp_1a6bf39b6e3b4fb8b7779dcd0aef415ffc" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="p2p-actions_8hpp_1a6bf39b6e3b4fb8b7779dcd0aef415ffc" kindref="member">run_downloadings</ref>()</highlight></codeline>
<codeline lineno="1397"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1a907cb8541be0266a9b471f343083f58a" kindref="member">lockMetaDataMutex</ref>();</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(list&lt;Resource&gt;::iterator<sp/>it<sp/>=<sp/><ref refid="data_8hpp_1a800b1bcc5d94702e777ac049989c7478" kindref="member">metaData</ref>.begin();<sp/>it<sp/>!=<sp/><ref refid="data_8hpp_1a800b1bcc5d94702e777ac049989c7478" kindref="member">metaData</ref>.end();it++){</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(it-&gt;missingBlocks.size()<sp/>!=<sp/>0)</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>list&lt;Resource&gt;::iterator*<sp/>param<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>list&lt;Resource&gt;::iterator;</highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*param<sp/>=<sp/>it;</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pthread_t<sp/>receiverThreadTCP;</highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(pthread_create(&amp;receiverThreadTCP,<sp/>NULL,<sp/><ref refid="p2p-actions_8hpp_1a02c06e9d9cdd58eebcb9166955e375a8" kindref="member">download_file</ref>,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>param))<sp/></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="p2p-actions_8hpp_1a5d9b1e1aab1a6dd1f4785f9d9bd4ebfe" kindref="member">safe_cout</ref>(<ref refid="p2p-actions_8hpp_1add88aad349701a93666701c817c05de7" kindref="member">downloadThreadFailed</ref>);</highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="data_8hpp_1aae48b6e618b7e4da6be36e2ccdaf5834" kindref="member">unlockMetaDataMutex</ref>();</highlight></codeline>
<codeline lineno="1413"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1414"><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="C:/Users/Artur/Downloads/TIN-master/p2p-actions.hpp"/>
  </compounddef>
</doxygen>
